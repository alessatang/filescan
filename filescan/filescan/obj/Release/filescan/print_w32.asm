; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	I:\Study\filescan\filescan\print_w32.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

EXTRN	__imp__putwchar:PROC
EXTRN	__imp__GetConsoleCursorInfo@8:PROC
EXTRN	__imp__FillConsoleOutputAttribute@20:PROC
EXTRN	__imp__SetConsoleCursorInfo@8:PROC
EXTRN	__imp___get_osfhandle:PROC
EXTRN	__imp__SetConsoleWindowInfo@12:PROC
EXTRN	__imp__isdigit:PROC
EXTRN	__imp__FillConsoleOutputCharacterW@20:PROC
EXTRN	__imp___vswprintf_c_l:PROC
EXTRN	__imp__SetConsoleCursorPosition@8:PROC
EXTRN	__imp__SetConsoleScreenBufferSize@8:PROC
_g_use_ansi DD	01H DUP (?)
_BSS	ENDS
;	COMDAT ?attr_initialized@?1??fprintf_w32@@YAHPAU_iobuf@@PB_WZZ@4HA
_BSS	SEGMENT
?attr_initialized@?1??fprintf_w32@@YAHPAU_iobuf@@PB_WZZ@4HA DD 01H DUP (?) ; `fprintf_w32'::`2'::attr_initialized
_BSS	ENDS
PUBLIC	?fprintf_w32@@YAHPAU_iobuf@@PB_WZZ		; fprintf_w32
PUBLIC	?windows_use_ansi@@YAXH@Z			; windows_use_ansi
;	COMDAT ?attr_reset@?1??fprintf_w32@@YAHPAU_iobuf@@PB_WZZ@4GA
_BSS	SEGMENT
?attr_reset@?1??fprintf_w32@@YAHPAU_iobuf@@PB_WZZ@4GA DW 01H DUP (?) ; `fprintf_w32'::`2'::attr_reset
_BSS	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?windows_use_ansi@@YAXH@Z
_TEXT	SEGMENT
?windows_use_ansi@@YAXH@Z PROC				; windows_use_ansi, COMDAT
; _use_ansi$ = ecx
; File i:\study\filescan\filescan\print_w32.c
; Line 30
	mov	DWORD PTR _g_use_ansi, ecx
; Line 31
	ret	0
?windows_use_ansi@@YAXH@Z ENDP				; windows_use_ansi
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?fprintf_w32@@YAHPAU_iobuf@@PB_WZZ
_TEXT	SEGMENT
_coord$ = -32880					; size = 4
_ptr$1$ = -32876					; size = 4
_stdo$1$ = -32872					; size = 4
_csize$3$ = -32868					; size = 4
_i$2$ = -32868						; size = 4
_i$1$ = -32868						; size = 4
_m$1$ = -32868						; size = 4
tv1091 = -32868						; size = 4
_n$1$ = -32864						; size = 4
_csize$2$ = -32860					; size = 4
_csize$1$ = -32860					; size = 4
tv1118 = -32860						; size = 4
_written$ = -32856					; size = 4
_cci$ = -32852						; size = 8
tv1089 = -32844						; size = 4
_csbi$ = -32840						; size = 22
_v$1 = -32816						; size = 32
_buf$ = -32776						; size = 32768
__$ArrayPad$ = -4					; size = 4
_fp$ = 8						; size = 4
_format$ = 12						; size = 4
?fprintf_w32@@YAHPAU_iobuf@@PB_WZZ PROC			; fprintf_w32, COMDAT
; File i:\study\filescan\filescan\print_w32.c
; Line 33
	push	ebp
	mov	ebp, esp
	and	esp, -16				; fffffff0H
	mov	eax, 32888				; 00008078H
	call	__chkstk
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, esp
	mov	DWORD PTR __$ArrayPad$[esp+32888], eax
	push	esi
	push	edi
	mov	edi, DWORD PTR _fp$[ebp]
; Line 35
	xor	eax, eax
	push	32766					; 00007ffeH
	push	eax
	mov	WORD PTR _buf$[esp+32904], ax
	lea	eax, DWORD PTR _buf$[esp+32906]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
	lea	eax, DWORD PTR _buf$[esp+32896]
; Line 52
	cmp	DWORD PTR _g_use_ansi, 0
	mov	DWORD PTR _ptr$1$[esp+32896], eax
	jne	$LN115@fprintf_w3
	mov	esi, DWORD PTR __imp___fileno
	push	edi
	call	esi
	push	eax
	call	DWORD PTR __imp___isatty
	add	esp, 8
	test	eax, eax
	je	$LN115@fprintf_w3
	push	edi
	call	esi
	push	eax
	call	DWORD PTR __imp___get_osfhandle
	mov	esi, eax
	add	esp, 8
	mov	DWORD PTR _stdo$1$[esp+32896], esi
	cmp	esi, -1
	je	$LN115@fprintf_w3
	lea	eax, DWORD PTR _csbi$[esp+32896]
	push	eax
	push	esi
	call	DWORD PTR __imp__GetConsoleScreenBufferInfo@8
	test	eax, eax
	je	$LN115@fprintf_w3
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\swprintf.inl
; Line 51
	lea	eax, DWORD PTR _format$[ebp+4]
	push	eax
	push	0
	push	DWORD PTR _format$[ebp]
	lea	eax, DWORD PTR _buf$[esp+32908]
	push	16383					; 00003fffH
	push	eax
	call	DWORD PTR __imp___vswprintf_c_l
; File i:\study\filescan\filescan\print_w32.c
; Line 69
	movzx	edi, WORD PTR _csbi$[esp+32924]
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\swprintf.inl
; Line 51
	add	esp, 20					; 00000014H
; File i:\study\filescan\filescan\print_w32.c
; Line 70
	cmp	DWORD PTR ?attr_initialized@?1??fprintf_w32@@YAHPAU_iobuf@@PB_WZZ@4HA, 0
	jne	SHORT $LN122@fprintf_w3
; Line 72
	mov	eax, DWORD PTR _csbi$[esp+32904]
	and	eax, 119				; 00000077H
; Line 73
	mov	DWORD PTR ?attr_initialized@?1??fprintf_w32@@YAHPAU_iobuf@@PB_WZZ@4HA, 1
	mov	WORD PTR ?attr_reset@?1??fprintf_w32@@YAHPAU_iobuf@@PB_WZZ@4GA, ax
$LN122@fprintf_w3:
; Line 76
	cmp	WORD PTR _buf$[esp+32896], 0
	je	$LN128@fprintf_w3
	lea	esi, DWORD PTR _buf$[esp+32896]
	npad	9
$LL110@fprintf_w3:
; Line 77
	movzx	eax, WORD PTR [esi]
	cmp	eax, 27					; 0000001bH
	jne	$LN108@fprintf_w3
; Line 81
	movdqa	xmm0, XMMWORD PTR __xmm@ffffffffffffffffffffffffffffffff
	xor	eax, eax
	mov	DWORD PTR _m$1$[esp+32896], eax
; Line 82
	mov	eax, DWORD PTR _ptr$1$[esp+32896]
	mov	DWORD PTR _n$1$[esp+32896], 0
	add	eax, 2
	movdqa	XMMWORD PTR _v$1[esp+32896], xmm0
	movdqa	XMMWORD PTR _v$1[esp+32912], xmm0
$retry$175:
; Line 84
	movzx	esi, WORD PTR [eax]
	add	eax, 2
	mov	DWORD PTR _ptr$1$[esp+32896], eax
	test	si, si
	je	$LN128@fprintf_w3
; Line 86
	mov	eax, esi
	push	eax
	mov	DWORD PTR tv1118[esp+32900], eax
	call	DWORD PTR __imp__isdigit
	add	esp, 4
	test	eax, eax
	je	SHORT $LN103@fprintf_w3
; Line 87
	mov	edx, DWORD PTR _n$1$[esp+32896]
	mov	eax, DWORD PTR _v$1[esp+edx*4+32896]
	cmp	eax, -1
	jne	SHORT $LN102@fprintf_w3
; Line 88
	mov	eax, esi
	add	eax, -48				; ffffffd0H
	mov	DWORD PTR _v$1[esp+edx*4+32896], eax
; Line 89
	mov	eax, DWORD PTR _ptr$1$[esp+32896]
	jmp	SHORT $retry$175
$LN102@fprintf_w3:
; Line 90
	mov	ecx, DWORD PTR tv1118[esp+32896]
	lea	eax, DWORD PTR [eax+eax*4]
	lea	eax, DWORD PTR [eax-24]
	lea	eax, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _v$1[esp+edx*4+32896], eax
; Line 91
	mov	eax, DWORD PTR _ptr$1$[esp+32896]
	jmp	SHORT $retry$175
$LN103@fprintf_w3:
; Line 93
	mov	eax, DWORD PTR _ptr$1$[esp+32896]
	cmp	esi, 91					; 0000005bH
	je	SHORT $retry$175
; Line 96
	cmp	esi, 59					; 0000003bH
	jne	SHORT $LN99@fprintf_w3
; Line 97
	mov	edx, DWORD PTR _n$1$[esp+32896]
	inc	edx
	mov	DWORD PTR _n$1$[esp+32896], edx
	cmp	edx, 8
	je	$LN128@fprintf_w3
; Line 99
	jmp	SHORT $retry$175
$LN99@fprintf_w3:
; Line 101
	cmp	esi, 62					; 0000003eH
	je	SHORT $LN96@fprintf_w3
	cmp	esi, 63					; 0000003fH
	jne	SHORT $LN97@fprintf_w3
$LN96@fprintf_w3:
; Line 102
	mov	ecx, DWORD PTR tv1118[esp+32896]
; Line 103
	mov	eax, DWORD PTR _ptr$1$[esp+32896]
	mov	DWORD PTR _m$1$[esp+32896], ecx
	jmp	$retry$175
$LN97@fprintf_w3:
; Line 106
	lea	eax, DWORD PTR [esi-72]
	cmp	eax, 37					; 00000025H
	ja	$LN160@fprintf_w3
	movzx	eax, BYTE PTR $LN149@fprintf_w3[eax]
	jmp	DWORD PTR $LN173@fprintf_w3[eax*4]
$LN93@fprintf_w3:
; Line 109
	mov	eax, DWORD PTR _m$1$[esp+32896]
	cmp	eax, 63					; 0000003fH
	jne	$LN92@fprintf_w3
; Line 110
	mov	esi, DWORD PTR _n$1$[esp+32896]
	xor	eax, eax
	mov	DWORD PTR _i$1$[esp+32896], eax
	test	esi, esi
	js	$LN160@fprintf_w3
$LL91@fprintf_w3:
; Line 111
	mov	eax, DWORD PTR _v$1[esp+eax*4+32896]
	add	eax, -3					; fffffffdH
	cmp	eax, 44					; 0000002cH
	ja	$LN90@fprintf_w3
	movzx	eax, BYTE PTR $LN150@fprintf_w3[eax]
	jmp	DWORD PTR $LN174@fprintf_w3[eax*4]
$LN86@fprintf_w3:
; Line 113
	lea	eax, DWORD PTR _csbi$[esp+32896]
	push	eax
	push	DWORD PTR _stdo$1$[esp+32900]
	call	DWORD PTR __imp__GetConsoleScreenBufferInfo@8
	mov	cx, WORD PTR _csbi$[esp+32908]
	movsx	edx, WORD PTR _csbi$[esp+32912]
	movsx	eax, cx
; Line 116
	sub	edx, eax
; Line 118
	mov	WORD PTR _coord$[esp+32898], cx
	movsx	eax, WORD PTR _csbi$[esp+32896]
	add	edx, 2
	imul	edx, eax
	xor	eax, eax
	mov	WORD PTR _coord$[esp+32896], ax
; Line 119
	lea	eax, DWORD PTR _written$[esp+32896]
	mov	esi, DWORD PTR _coord$[esp+32896]
	push	eax
	push	esi
	push	edx
	push	32					; 00000020H
	push	DWORD PTR _stdo$1$[esp+32912]
	mov	DWORD PTR _csize$1$[esp+32916], edx
	call	DWORD PTR __imp__FillConsoleOutputCharacterW@20
; Line 120
	lea	eax, DWORD PTR _written$[esp+32896]
	push	eax
	push	esi
	push	DWORD PTR _csize$1$[esp+32904]
	mov	esi, DWORD PTR _stdo$1$[esp+32908]
	push	DWORD PTR _csbi$[esp+32916]
	push	esi
	call	DWORD PTR __imp__FillConsoleOutputAttribute@20
; Line 121
	push	DWORD PTR _csbi$[esp+32900]
	push	esi
	call	DWORD PTR __imp__SetConsoleCursorPosition@8
; Line 122
	mov	eax, 132				; 00000084H
	mov	WORD PTR _csbi$[esp+32896], ax
; Line 123
	push	DWORD PTR _csbi$[esp+32896]
	push	esi
	call	DWORD PTR __imp__SetConsoleScreenBufferSize@8
; Line 124
	mov	eax, DWORD PTR _csbi$[esp+32906]
	add	eax, 131				; 00000083H
	mov	WORD PTR _csbi$[esp+32910], ax
; Line 125
	lea	eax, DWORD PTR _csbi$[esp+32906]
	push	eax
	push	1
	push	esi
	call	DWORD PTR __imp__SetConsoleWindowInfo@12
; Line 126
	mov	esi, DWORD PTR _n$1$[esp+32896]
	jmp	SHORT $LN90@fprintf_w3
$LN85@fprintf_w3:
; Line 130
	mov	eax, edi
	and	edi, 15					; 0000000fH
	shr	eax, 4
	shl	edi, 4
	and	eax, 15					; 0000000fH
	or	eax, edi
	movzx	edi, ax
; Line 131
	push	edi
	push	DWORD PTR _stdo$1$[esp+32900]
	call	DWORD PTR __imp__SetConsoleTextAttribute@8
; Line 132
	jmp	SHORT $LN90@fprintf_w3
$LN83@fprintf_w3:
; Line 136
	mov	esi, DWORD PTR _stdo$1$[esp+32896]
	lea	eax, DWORD PTR _cci$[esp+32896]
	push	eax
	push	esi
	call	DWORD PTR __imp__GetConsoleCursorInfo@8
; Line 138
	lea	eax, DWORD PTR _cci$[esp+32896]
	mov	DWORD PTR _cci$[esp+32900], 1
	push	eax
	push	esi
	call	DWORD PTR __imp__SetConsoleCursorInfo@8
; Line 139
	mov	esi, DWORD PTR _n$1$[esp+32896]
	jmp	SHORT $LN90@fprintf_w3
$LN82@fprintf_w3:
; Line 141
	xor	eax, eax
; Line 143
	push	eax
	push	DWORD PTR _stdo$1$[esp+32900]
	mov	DWORD PTR _coord$[esp+32904], eax
	call	DWORD PTR __imp__SetConsoleCursorPosition@8
$LN90@fprintf_w3:
; Line 110
	mov	eax, DWORD PTR _i$1$[esp+32896]
	inc	eax
	mov	DWORD PTR _i$1$[esp+32896], eax
	cmp	eax, esi
	jle	$LL91@fprintf_w3
; Line 148
	jmp	SHORT $LN160@fprintf_w3
$LN92@fprintf_w3:
; Line 149
	cmp	eax, 62					; 0000003eH
	jne	SHORT $LN160@fprintf_w3
	cmp	DWORD PTR _v$1[esp+32896], 5
	jne	SHORT $LN160@fprintf_w3
; Line 150
	mov	esi, DWORD PTR _stdo$1$[esp+32896]
	lea	eax, DWORD PTR _cci$[esp+32896]
	push	eax
	push	esi
	call	DWORD PTR __imp__GetConsoleCursorInfo@8
; Line 151
	mov	DWORD PTR _cci$[esp+32900], 0
$LN171@fprintf_w3:
; Line 192
	lea	eax, DWORD PTR _cci$[esp+32896]
	push	eax
	push	esi
	call	DWORD PTR __imp__SetConsoleCursorInfo@8
$LN160@fprintf_w3:
	mov	esi, DWORD PTR _ptr$1$[esp+32896]
$LN1@fprintf_w3:
; Line 76
	cmp	WORD PTR [esi], 0
	jne	$LL110@fprintf_w3
$LN128@fprintf_w3:
; Line 324
	mov	eax, DWORD PTR _ptr$1$[esp+32896]
	lea	ecx, DWORD PTR _buf$[esp+32896]
	sub	eax, ecx
	sar	eax, 1
; Line 325
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[esp+32888]
	xor	ecx, esp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN78@fprintf_w3:
; Line 156
	mov	eax, DWORD PTR _m$1$[esp+32896]
	cmp	eax, 63					; 0000003fH
	jne	$LN77@fprintf_w3
; Line 157
	mov	esi, DWORD PTR _n$1$[esp+32896]
	xor	eax, eax
	mov	DWORD PTR _i$2$[esp+32896], eax
	test	esi, esi
	js	SHORT $LN160@fprintf_w3
$LL76@fprintf_w3:
; Line 158
	mov	eax, DWORD PTR _v$1[esp+eax*4+32896]
	sub	eax, 3
	je	SHORT $LN71@fprintf_w3
	sub	eax, 2
	je	SHORT $LN70@fprintf_w3
	sub	eax, 20					; 00000014H
	jne	$LN75@fprintf_w3
; Line 181
	mov	esi, DWORD PTR _stdo$1$[esp+32896]
	lea	eax, DWORD PTR _cci$[esp+32896]
	push	eax
	push	esi
	call	DWORD PTR __imp__GetConsoleCursorInfo@8
; Line 183
	lea	eax, DWORD PTR _cci$[esp+32896]
	mov	DWORD PTR _cci$[esp+32900], 0
	push	eax
	push	esi
	call	DWORD PTR __imp__SetConsoleCursorInfo@8
; Line 184
	jmp	$LN161@fprintf_w3
$LN70@fprintf_w3:
; Line 177
	mov	eax, edi
	and	edi, 15					; 0000000fH
	shr	eax, 4
	shl	edi, 4
	and	eax, 15					; 0000000fH
	or	eax, edi
	movzx	edi, ax
; Line 178
	push	edi
	push	DWORD PTR _stdo$1$[esp+32900]
	call	DWORD PTR __imp__SetConsoleTextAttribute@8
; Line 179
	jmp	$LN75@fprintf_w3
$LN71@fprintf_w3:
; Line 160
	lea	eax, DWORD PTR _csbi$[esp+32896]
	push	eax
	push	DWORD PTR _stdo$1$[esp+32900]
	call	DWORD PTR __imp__GetConsoleScreenBufferInfo@8
	mov	cx, WORD PTR _csbi$[esp+32908]
	movsx	edx, WORD PTR _csbi$[esp+32912]
	movsx	eax, cx
; Line 163
	sub	edx, eax
; Line 165
	mov	WORD PTR _coord$[esp+32898], cx
	movsx	eax, WORD PTR _csbi$[esp+32896]
	add	edx, 2
	imul	edx, eax
	xor	eax, eax
	mov	WORD PTR _coord$[esp+32896], ax
; Line 166
	lea	eax, DWORD PTR _written$[esp+32896]
	mov	esi, DWORD PTR _coord$[esp+32896]
	push	eax
	push	esi
	push	edx
	push	32					; 00000020H
	push	DWORD PTR _stdo$1$[esp+32912]
	mov	DWORD PTR _csize$2$[esp+32916], edx
	call	DWORD PTR __imp__FillConsoleOutputCharacterW@20
; Line 167
	lea	eax, DWORD PTR _written$[esp+32896]
	push	eax
	push	esi
	push	DWORD PTR _csize$2$[esp+32904]
	mov	esi, DWORD PTR _stdo$1$[esp+32908]
	push	DWORD PTR _csbi$[esp+32916]
	push	esi
	call	DWORD PTR __imp__FillConsoleOutputAttribute@20
; Line 168
	push	DWORD PTR _csbi$[esp+32900]
	push	esi
	call	DWORD PTR __imp__SetConsoleCursorPosition@8
; Line 169
	mov	eax, DWORD PTR _csbi$[esp+32906]
	add	eax, 79					; 0000004fH
	mov	WORD PTR _csbi$[esp+32910], ax
; Line 170
	lea	eax, DWORD PTR _csbi$[esp+32906]
	push	eax
	push	1
	push	esi
	call	DWORD PTR __imp__SetConsoleWindowInfo@12
; Line 171
	mov	eax, 80					; 00000050H
	mov	WORD PTR _csbi$[esp+32896], ax
; Line 172
	push	DWORD PTR _csbi$[esp+32896]
	push	esi
	call	DWORD PTR __imp__SetConsoleScreenBufferSize@8
$LN161@fprintf_w3:
	mov	esi, DWORD PTR _n$1$[esp+32896]
$LN75@fprintf_w3:
; Line 157
	mov	eax, DWORD PTR _i$2$[esp+32896]
	inc	eax
	mov	DWORD PTR _i$2$[esp+32896], eax
	cmp	eax, esi
	jle	$LL76@fprintf_w3
; Line 188
	jmp	$LN160@fprintf_w3
$LN77@fprintf_w3:
; Line 189
	cmp	eax, 62					; 0000003eH
	jne	$LN160@fprintf_w3
	cmp	DWORD PTR _v$1[esp+32896], 5
	jne	$LN160@fprintf_w3
; Line 190
	mov	esi, DWORD PTR _stdo$1$[esp+32896]
	lea	eax, DWORD PTR _cci$[esp+32896]
	push	eax
	push	esi
	call	DWORD PTR __imp__GetConsoleCursorInfo@8
; Line 191
	mov	DWORD PTR _cci$[esp+32900], 1
; Line 194
	jmp	$LN171@fprintf_w3
$LN65@fprintf_w3:
; Line 196
	mov	edx, DWORD PTR _n$1$[esp+32896]
	xor	esi, esi
	test	edx, edx
	js	$LN62@fprintf_w3
	mov	eax, DWORD PTR ?attr_reset@?1??fprintf_w32@@YAHPAU_iobuf@@PB_WZZ@4GA
	npad	7
$LL64@fprintf_w3:
; Line 197
	mov	ecx, DWORD PTR _v$1[esp+esi*4+32896]
	cmp	ecx, -1
	je	$LN60@fprintf_w3
	test	ecx, ecx
	je	$LN60@fprintf_w3
; Line 199
	cmp	ecx, 1
	jne	SHORT $LN58@fprintf_w3
; Line 200
	or	edi, 8
	jmp	$LN63@fprintf_w3
$LN58@fprintf_w3:
; Line 201
	cmp	ecx, 4
	jne	SHORT $LN56@fprintf_w3
; Line 202
	or	edi, 8
	jmp	$LN63@fprintf_w3
$LN56@fprintf_w3:
; Line 203
	cmp	ecx, 5
	jne	SHORT $LN54@fprintf_w3
; Line 204
	or	edi, 128				; 00000080H
	jmp	$LN63@fprintf_w3
$LN54@fprintf_w3:
; Line 205
	cmp	ecx, 7
	jne	SHORT $LN52@fprintf_w3
$LN162@fprintf_w3:
; Line 208
	mov	eax, edi
	and	edi, 15					; 0000000fH
	shr	eax, 4
	shl	edi, 4
	and	eax, 15					; 0000000fH
	or	eax, edi
	movzx	edi, ax
	jmp	SHORT $LN152@fprintf_w3
$LN52@fprintf_w3:
; Line 209
	cmp	ecx, 10					; 0000000aH
	je	SHORT $LN63@fprintf_w3
; Line 211
	cmp	ecx, 11					; 0000000bH
	je	SHORT $LN63@fprintf_w3
; Line 213
	cmp	ecx, 22					; 00000016H
	jne	SHORT $LN46@fprintf_w3
; Line 214
	and	edi, 65527				; 0000fff7H
	jmp	SHORT $LN63@fprintf_w3
$LN46@fprintf_w3:
; Line 215
	cmp	ecx, 24					; 00000018H
	jne	SHORT $LN44@fprintf_w3
; Line 216
	and	edi, 65527				; 0000fff7H
	jmp	SHORT $LN63@fprintf_w3
$LN44@fprintf_w3:
; Line 217
	cmp	ecx, 25					; 00000019H
	jne	SHORT $LN42@fprintf_w3
; Line 218
	and	edi, 65407				; 0000ff7fH
	jmp	SHORT $LN63@fprintf_w3
$LN42@fprintf_w3:
; Line 219
	cmp	ecx, 27					; 0000001bH
	je	SHORT $LN162@fprintf_w3
; Line 223
	cmp	ecx, 30					; 0000001eH
	jl	SHORT $LN38@fprintf_w3
	cmp	ecx, 37					; 00000025H
	jg	SHORT $LN38@fprintf_w3
; Line 224
	and	edi, 65528				; 0000fff8H
; Line 225
	test	cl, 1
	je	SHORT $LN37@fprintf_w3
; Line 226
	or	edi, 4
$LN37@fprintf_w3:
; Line 227
	lea	eax, DWORD PTR [ecx-2]
	test	al, 2
	je	SHORT $LN36@fprintf_w3
; Line 228
	or	edi, 2
$LN36@fprintf_w3:
; Line 229
	lea	eax, DWORD PTR [ecx+2]
	test	al, 4
	je	SHORT $LN152@fprintf_w3
; Line 230
	or	edi, 1
; Line 231
	jmp	SHORT $LN152@fprintf_w3
$LN38@fprintf_w3:
	cmp	ecx, 39					; 00000027H
	jne	SHORT $LN33@fprintf_w3
; Line 232
	and	eax, 7
	and	edi, 65520				; 0000fff0H
$LN163@fprintf_w3:
; Line 242
	or	edi, eax
$LN152@fprintf_w3:
	mov	eax, DWORD PTR ?attr_reset@?1??fprintf_w32@@YAHPAU_iobuf@@PB_WZZ@4GA
$LN63@fprintf_w3:
; Line 196
	inc	esi
	cmp	esi, edx
	jle	$LL64@fprintf_w3
$LN62@fprintf_w3:
; Line 244
	push	edi
	push	DWORD PTR _stdo$1$[esp+32900]
	call	DWORD PTR __imp__SetConsoleTextAttribute@8
; Line 245
	jmp	$LN160@fprintf_w3
$LN33@fprintf_w3:
; Line 233
	cmp	ecx, 40					; 00000028H
	jl	SHORT $LN31@fprintf_w3
	cmp	ecx, 47					; 0000002fH
	jg	SHORT $LN31@fprintf_w3
; Line 234
	and	edi, 65423				; 0000ff8fH
; Line 235
	test	cl, 1
	je	SHORT $LN30@fprintf_w3
; Line 236
	or	edi, 64					; 00000040H
$LN30@fprintf_w3:
; Line 237
	test	cl, 2
	je	SHORT $LN29@fprintf_w3
; Line 238
	or	edi, 32					; 00000020H
$LN29@fprintf_w3:
; Line 239
	test	cl, 4
	je	SHORT $LN63@fprintf_w3
; Line 240
	or	edi, 16					; 00000010H
; Line 241
	jmp	SHORT $LN63@fprintf_w3
$LN31@fprintf_w3:
	cmp	ecx, 49					; 00000031H
	jne	SHORT $LN63@fprintf_w3
; Line 242
	and	edi, 65295				; 0000ff0fH
	and	eax, 112				; 00000070H
	jmp	SHORT $LN163@fprintf_w3
$LN60@fprintf_w3:
; Line 198
	movzx	edi, WORD PTR ?attr_reset@?1??fprintf_w32@@YAHPAU_iobuf@@PB_WZZ@4GA
	jmp	SHORT $LN63@fprintf_w3
$LN25@fprintf_w3:
; Line 247
	lea	eax, DWORD PTR _csbi$[esp+32896]
	push	eax
	push	DWORD PTR _stdo$1$[esp+32900]
	call	DWORD PTR __imp__GetConsoleScreenBufferInfo@8
; Line 249
	mov	eax, DWORD PTR _v$1[esp+32896]
	mov	esi, DWORD PTR _csbi$[esp+32900]
	mov	DWORD PTR _coord$[esp+32896], esi
	dec	eax
	je	SHORT $LN21@fprintf_w3
; Line 252
	movsx	ecx, WORD PTR _csbi$[esp+32896]
	dec	eax
	je	SHORT $LN20@fprintf_w3
	movsx	eax, si
	sub	ecx, eax
; Line 253
	jmp	SHORT $LN164@fprintf_w3
$LN21@fprintf_w3:
; Line 255
	movsx	ecx, WORD PTR _csbi$[esp+32900]
$LN20@fprintf_w3:
; Line 256
	xor	eax, eax
	mov	WORD PTR _coord$[esp+32896], ax
$LN165@fprintf_w3:
	mov	esi, DWORD PTR _coord$[esp+32896]
$LN164@fprintf_w3:
; Line 263
	lea	eax, DWORD PTR _written$[esp+32896]
	mov	DWORD PTR _csize$3$[esp+32896], ecx
	push	eax
	push	esi
	push	ecx
	push	32					; 00000020H
	push	DWORD PTR _stdo$1$[esp+32912]
	call	DWORD PTR __imp__FillConsoleOutputCharacterW@20
; Line 264
	lea	eax, DWORD PTR _written$[esp+32896]
	push	eax
	push	esi
	push	DWORD PTR _csize$3$[esp+32904]
	mov	esi, DWORD PTR _stdo$1$[esp+32908]
	push	DWORD PTR _csbi$[esp+32916]
	push	esi
	call	DWORD PTR __imp__FillConsoleOutputAttribute@20
; Line 265
	push	DWORD PTR _csbi$[esp+32900]
	push	esi
	call	DWORD PTR __imp__SetConsoleCursorPosition@8
; Line 266
	jmp	$LN160@fprintf_w3
$LN19@fprintf_w3:
; Line 268
	lea	eax, DWORD PTR _csbi$[esp+32896]
	push	eax
	push	DWORD PTR _stdo$1$[esp+32900]
	call	DWORD PTR __imp__GetConsoleScreenBufferInfo@8
; Line 270
	mov	ax, WORD PTR _csbi$[esp+32908]
	movsx	ecx, WORD PTR _csbi$[esp+32912]
; Line 272
	mov	edx, DWORD PTR _v$1[esp+32896]
	movsx	esi, WORD PTR _csbi$[esp+32896]
	cwde
	sub	ecx, eax
	mov	eax, DWORD PTR _csbi$[esp+32900]
	inc	ecx
	mov	DWORD PTR _coord$[esp+32896], eax
	dec	edx
	je	SHORT $LN15@fprintf_w3
	dec	edx
	je	SHORT $LN14@fprintf_w3
; Line 275
	shr	eax, 16					; 00000010H
	cwde
	sub	ecx, eax
	movsx	eax, WORD PTR _csbi$[esp+32900]
	imul	ecx, esi
	sub	ecx, eax
; Line 277
	jmp	$LN20@fprintf_w3
$LN14@fprintf_w3:
; Line 284
	inc	ecx
	imul	ecx, esi
; Line 287
	jmp	SHORT $LN166@fprintf_w3
$LN15@fprintf_w3:
; Line 279
	movsx	ecx, WORD PTR _csbi$[esp+32902]
	movsx	eax, WORD PTR _csbi$[esp+32900]
	imul	ecx, esi
	add	ecx, eax
$LN166@fprintf_w3:
; Line 280
	xor	eax, eax
	mov	WORD PTR _coord$[esp+32896], ax
; Line 281
	mov	ax, WORD PTR _csbi$[esp+32908]
	mov	WORD PTR _coord$[esp+32898], ax
; Line 292
	jmp	$LN165@fprintf_w3
$LN13@fprintf_w3:
; Line 294
	mov	esi, DWORD PTR _stdo$1$[esp+32896]
	lea	eax, DWORD PTR _csbi$[esp+32896]
	push	eax
	push	esi
	call	DWORD PTR __imp__GetConsoleScreenBufferInfo@8
; Line 296
	mov	ecx, DWORD PTR _v$1[esp+32896]
	mov	eax, DWORD PTR _csbi$[esp+32900]
	mov	DWORD PTR _coord$[esp+32896], eax
	cmp	ecx, -1
	je	SHORT $LN12@fprintf_w3
; Line 297
	mov	edx, DWORD PTR _v$1[esp+32900]
	cmp	edx, -1
	je	SHORT $LN11@fprintf_w3
; Line 298
	mov	eax, DWORD PTR _csbi$[esp+32908]
	dec	eax
	add	ecx, eax
; Line 299
	lea	eax, DWORD PTR [edx-1]
	mov	DWORD PTR tv1089[esp+32896], ecx
; Line 300
	jmp	SHORT $LN167@fprintf_w3
$LN11@fprintf_w3:
; Line 301
	lea	eax, DWORD PTR [ecx-1]
; Line 302
	mov	cx, WORD PTR _coord$[esp+32898]
	mov	DWORD PTR tv1089[esp+32896], ecx
	jmp	SHORT $LN167@fprintf_w3
$LN12@fprintf_w3:
; Line 304
	mov	cx, WORD PTR _csbi$[esp+32908]
	xor	eax, eax
	mov	WORD PTR tv1089[esp+32896], cx
$LN167@fprintf_w3:
; Line 306
	mov	cx, WORD PTR _csbi$[esp+32906]
	mov	DWORD PTR tv1091[esp+32896], eax
	cmp	ax, cx
	jge	SHORT $LN8@fprintf_w3
; Line 307
	mov	WORD PTR _coord$[esp+32896], cx
	jmp	SHORT $LN6@fprintf_w3
$LN8@fprintf_w3:
; Line 308
	movzx	edx, ax
	mov	ax, WORD PTR _csbi$[esp+32910]
	cmp	WORD PTR tv1091[esp+32896], ax
	movzx	ecx, ax
	cmovg	edx, ecx
	mov	WORD PTR _coord$[esp+32896], dx
$LN6@fprintf_w3:
; Line 310
	mov	cx, WORD PTR _csbi$[esp+32908]
	mov	eax, DWORD PTR tv1089[esp+32896]
	cmp	ax, cx
	jge	SHORT $LN5@fprintf_w3
; Line 311
	mov	WORD PTR _coord$[esp+32898], cx
; Line 314
	push	DWORD PTR _coord$[esp+32896]
	push	esi
	call	DWORD PTR __imp__SetConsoleCursorPosition@8
	jmp	$LN160@fprintf_w3
$LN5@fprintf_w3:
; Line 312
	movzx	edx, ax
	mov	ax, WORD PTR _csbi$[esp+32912]
	cmp	WORD PTR tv1089[esp+32896], ax
	movzx	ecx, ax
	cmovg	edx, ecx
	mov	WORD PTR _coord$[esp+32898], dx
; Line 314
	push	DWORD PTR _coord$[esp+32896]
	push	esi
	call	DWORD PTR __imp__SetConsoleCursorPosition@8
	jmp	$LN160@fprintf_w3
$LN108@fprintf_w3:
; Line 320
	push	eax
	call	DWORD PTR __imp__putwchar
	add	esp, 4
; Line 321
	add	esi, 2
	mov	DWORD PTR _ptr$1$[esp+32896], esi
	jmp	$LN1@fprintf_w3
$LN115@fprintf_w3:
; Line 57
	lea	eax, DWORD PTR _format$[ebp+4]
	push	eax
	push	DWORD PTR _format$[ebp]
	push	edi
	call	DWORD PTR __imp__vfwprintf
; Line 325
	mov	ecx, DWORD PTR __$ArrayPad$[esp+32908]
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	xor	ecx, esp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN173@fprintf_w3:
	DD	$LN13@fprintf_w3
	DD	$LN19@fprintf_w3
	DD	$LN25@fprintf_w3
	DD	$LN93@fprintf_w3
	DD	$LN78@fprintf_w3
	DD	$LN65@fprintf_w3
	DD	$LN160@fprintf_w3
$LN149@fprintf_w3:
	DB	0
	DB	6
	DB	1
	DB	2
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	3
	DB	6
	DB	6
	DB	6
	DB	4
	DB	5
	npad	2
$LN174@fprintf_w3:
	DD	$LN86@fprintf_w3
	DD	$LN85@fprintf_w3
	DD	$LN83@fprintf_w3
	DD	$LN82@fprintf_w3
	DD	$LN90@fprintf_w3
$LN150@fprintf_w3:
	DB	0
	DB	4
	DB	1
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	2
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	3
?fprintf_w32@@YAHPAU_iobuf@@PB_WZZ ENDP			; fprintf_w32
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT _vswprintf
_TEXT	SEGMENT
__Format$ = 8						; size = 4
__Ap$ = 12						; size = 4
_vswprintf PROC						; COMDAT
; __String$ = ecx
; __Count$dead$ = edx
; File c:\program files (x86)\microsoft visual studio 12.0\vc\include\swprintf.inl
; Line 50
	push	ebp
	mov	ebp, esp
; Line 51
	push	DWORD PTR __Ap$[ebp]
	push	0
	push	DWORD PTR __Format$[ebp]
	push	16383					; 00003fffH
	push	ecx
	call	DWORD PTR __imp___vswprintf_c_l
	add	esp, 20					; 00000014H
; Line 52
	pop	ebp
	ret	0
_vswprintf ENDP
_TEXT	ENDS
END
