; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.31101.0 

	TITLE	I:\Study\filescan\filescan\util.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	?out_fd@@3PAU_iobuf@@A				; out_fd
PUBLIC	?stats@@3Uag_stats@@A				; stats
PUBLIC	??_C@_1DE@PGDGFCEA@?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?4?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CM@OPHHGMEC@?$AAI?$AAn?$AAv?$AAe?$AAr?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAu?$AA?5?$AAm?$AAa?$AAt?$AAc?$AAh?$AAe?$AAs?$AA?4?$AA?$AA@ ; `string'
PUBLIC	??_C@_1EG@LDCGIKAD@?$AAI?$AAn?$AAv?$AAe?$AAr?$AAt?$AAe?$AAd?$AA?5?$AAm?$AAa?$AAt?$AAc?$AAh?$AA?5?$AA?$CF?$AAi?$AA?5?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?$CF?$AAi?$AA?5?$AAe?$AAn?$AAd?$AA?5?$AA?$CF@ ; `string'
PUBLIC	??_C@_1OA@EHILIGIC@?$AAB?$AAa?$AAd?$AA?5?$AAr?$AAe?$AAg?$AAe?$AAx?$AA?$CB?$AA?5?$AAp?$AAc?$AAr?$AAe?$AA_?$AAc?$AAo?$AAm?$AAp?$AAi?$AAl?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd@ ; `string'
PUBLIC	??_C@_1FM@HOKKFDCC@?$AAp?$AAc?$AAr?$AAe?$AA_?$AAs?$AAt?$AAu?$AAd?$AAy?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AAn?$AAo?$AAt?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAu?$AAs?$AAe?$AAf@ ; `string'
PUBLIC	??_C@_1M@JLCCEBLF@?$AA?$CF?$AAP?$AAD?$AAF?$AA?9?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CM@KKPBLOGP@?$AAv?$AAa?$AAs?$AAp?$AAr?$AAi?$AAn?$AAt?$AAf?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AA?9?$AA1?$AA?$AA@ ; `string'
EXTRN	__imp__wcscpy_s:PROC
EXTRN	__imp___wfullpath:PROC
EXTRN	__imp__isupper:PROC
EXTRN	__imp__fgetwc:PROC
EXTRN	__imp___vsnwprintf:PROC
EXTRN	__imp__wcspbrk:PROC
EXTRN	__imp___vacopy:PROC
?out_fd@@3PAU_iobuf@@A DD 01H DUP (?)			; out_fd
?stats@@3Uag_stats@@A DB 01cH DUP (?)			; stats
_BSS	ENDS
;	COMDAT ??_C@_1CM@KKPBLOGP@?$AAv?$AAa?$AAs?$AAp?$AAr?$AAi?$AAn?$AAt?$AAf?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AA?9?$AA1?$AA?$AA@
CONST	SEGMENT
??_C@_1CM@KKPBLOGP@?$AAv?$AAa?$AAs?$AAp?$AAr?$AAi?$AAn?$AAt?$AAf?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AA?9?$AA1?$AA?$AA@ DB 'v'
	DB	00H, 'a', 00H, 's', 00H, 'p', 00H, 'r', 00H, 'i', 00H, 'n', 00H
	DB	't', 00H, 'f', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 't', 00H, 'u'
	DB	00H, 'r', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H, '-', 00H
	DB	'1', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1M@JLCCEBLF@?$AA?$CF?$AAP?$AAD?$AAF?$AA?9?$AA?$AA@
CONST	SEGMENT
??_C@_1M@JLCCEBLF@?$AA?$CF?$AAP?$AAD?$AAF?$AA?9?$AA?$AA@ DB '%', 00H, 'P', 00H
	DB	'D', 00H, 'F', 00H, '-', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1FM@HOKKFDCC@?$AAp?$AAc?$AAr?$AAe?$AA_?$AAs?$AAt?$AAu?$AAd?$AAy?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AAn?$AAo?$AAt?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAu?$AAs?$AAe?$AAf@
CONST	SEGMENT
??_C@_1FM@HOKKFDCC@?$AAp?$AAc?$AAr?$AAe?$AA_?$AAs?$AAt?$AAu?$AAd?$AAy?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AAn?$AAo?$AAt?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAu?$AAs?$AAe?$AAf@ DB 'p'
	DB	00H, 'c', 00H, 'r', 00H, 'e', 00H, '_', 00H, 's', 00H, 't', 00H
	DB	'u', 00H, 'd', 00H, 'y', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 't'
	DB	00H, 'u', 00H, 'r', 00H, 'n', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	'n', 00H, 'o', 00H, 't', 00H, 'h', 00H, 'i', 00H, 'n', 00H, 'g'
	DB	00H, ' ', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'f', 00H, 'u', 00H
	DB	'l', 00H, '.', 00H, ' ', 00H, 'E', 00H, 'r', 00H, 'r', 00H, 'o'
	DB	00H, 'r', 00H, ':', 00H, ' ', 00H, '%', 00H, 's', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1OA@EHILIGIC@?$AAB?$AAa?$AAd?$AA?5?$AAr?$AAe?$AAg?$AAe?$AAx?$AA?$CB?$AA?5?$AAp?$AAc?$AAr?$AAe?$AA_?$AAc?$AAo?$AAm?$AAp?$AAi?$AAl?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd@
CONST	SEGMENT
??_C@_1OA@EHILIGIC@?$AAB?$AAa?$AAd?$AA?5?$AAr?$AAe?$AAg?$AAe?$AAx?$AA?$CB?$AA?5?$AAp?$AAc?$AAr?$AAe?$AA_?$AAc?$AAo?$AAm?$AAp?$AAi?$AAl?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd@ DB 'B'
	DB	00H, 'a', 00H, 'd', 00H, ' ', 00H, 'r', 00H, 'e', 00H, 'g', 00H
	DB	'e', 00H, 'x', 00H, '!', 00H, ' ', 00H, 'p', 00H, 'c', 00H, 'r'
	DB	00H, 'e', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H
	DB	'i', 00H, 'l', 00H, 'e', 00H, '(', 00H, ')', 00H, ' ', 00H, 'f'
	DB	00H, 'a', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H
	DB	'a', 00H, 't', 00H, ' ', 00H, 'p', 00H, 'o', 00H, 's', 00H, 'i'
	DB	00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, '%', 00H
	DB	'i', 00H, ':', 00H, ' ', 00H, '%', 00H, 's', 00H, 0aH, 00H, 'I'
	DB	00H, 'f', 00H, ' ', 00H, 'y', 00H, 'o', 00H, 'u', 00H, ' ', 00H
	DB	'm', 00H, 'e', 00H, 'a', 00H, 'n', 00H, 't', 00H, ' ', 00H, 't'
	DB	00H, 'o', 00H, ' ', 00H, 's', 00H, 'e', 00H, 'a', 00H, 'r', 00H
	DB	'c', 00H, 'h', 00H, ' ', 00H, 'f', 00H, 'o', 00H, 'r', 00H, ' '
	DB	00H, 'a', 00H, ' ', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 'l', 00H, ' ', 00H, 's', 00H, 't', 00H, 'r'
	DB	00H, 'i', 00H, 'n', 00H, 'g', 00H, ',', 00H, ' ', 00H, 'r', 00H
	DB	'u', 00H, 'n', 00H, ' ', 00H, 'a', 00H, 'g', 00H, ' ', 00H, 'w'
	DB	00H, 'i', 00H, 't', 00H, 'h', 00H, ' ', 00H, '-', 00H, 'Q', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@LDCGIKAD@?$AAI?$AAn?$AAv?$AAe?$AAr?$AAt?$AAe?$AAd?$AA?5?$AAm?$AAa?$AAt?$AAc?$AAh?$AA?5?$AA?$CF?$AAi?$AA?5?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?$CF?$AAi?$AA?5?$AAe?$AAn?$AAd?$AA?5?$AA?$CF@
CONST	SEGMENT
??_C@_1EG@LDCGIKAD@?$AAI?$AAn?$AAv?$AAe?$AAr?$AAt?$AAe?$AAd?$AA?5?$AAm?$AAa?$AAt?$AAc?$AAh?$AA?5?$AA?$CF?$AAi?$AA?5?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?$CF?$AAi?$AA?5?$AAe?$AAn?$AAd?$AA?5?$AA?$CF@ DB 'I'
	DB	00H, 'n', 00H, 'v', 00H, 'e', 00H, 'r', 00H, 't', 00H, 'e', 00H
	DB	'd', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 't', 00H, 'c', 00H, 'h'
	DB	00H, ' ', 00H, '%', 00H, 'i', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'a', 00H, 'r', 00H, 't', 00H, ' ', 00H, '%', 00H, 'i', 00H, ' '
	DB	00H, 'e', 00H, 'n', 00H, 'd', 00H, ' ', 00H, '%', 00H, 'i', 00H
	DB	'.', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1CM@OPHHGMEC@?$AAI?$AAn?$AAv?$AAe?$AAr?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAu?$AA?5?$AAm?$AAa?$AAt?$AAc?$AAh?$AAe?$AAs?$AA?4?$AA?$AA@
CONST	SEGMENT
??_C@_1CM@OPHHGMEC@?$AAI?$AAn?$AAv?$AAe?$AAr?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAu?$AA?5?$AAm?$AAa?$AAt?$AAc?$AAh?$AAe?$AAs?$AA?4?$AA?$AA@ DB 'I'
	DB	00H, 'n', 00H, 'v', 00H, 'e', 00H, 'r', 00H, 't', 00H, 'i', 00H
	DB	'n', 00H, 'g', 00H, ' ', 00H, '%', 00H, 'u', 00H, ' ', 00H, 'm'
	DB	00H, 'a', 00H, 't', 00H, 'c', 00H, 'h', 00H, 'e', 00H, 's', 00H
	DB	'.', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1DE@PGDGFCEA@?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?4?$AA?$AA@
CONST	SEGMENT
??_C@_1DE@PGDGFCEA@?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?4?$AA?$AA@ DB 'M'
	DB	00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, ' ', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, ' ', 00H, 'f', 00H, 'a', 00H
	DB	'i', 00H, 'l', 00H, 'e', 00H, 'd', 00H, '.', 00H, 00H, 00H ; `string'
PUBLIC	?vasprintf@@YAHPAPA_WPB_WPAD@Z			; vasprintf
PUBLIC	?fgetln@@YAPA_WPAU_iobuf@@PAI@Z			; fgetln
PUBLIC	?boyer_moore_strncasestr@@YAPB_WPB_W0IIQBIPBI@Z	; boyer_moore_strncasestr
PUBLIC	?boyer_moore_strnstr@@YAPB_WPB_W0IIQBIPBI@Z	; boyer_moore_strnstr
PUBLIC	?ag_max@@YAIII@Z				; ag_max
PUBLIC	?suffix_len@@YAIPB_WIIH@Z			; suffix_len
PUBLIC	?is_prefix@@YAHPB_WIIH@Z			; is_prefix
PUBLIC	?get_strstr@@YAP6APB_WPB_W0IIQBIPBI@ZW4case_behavior@@@Z ; get_strstr
PUBLIC	?invert_matches@@YAIPB_WIQAUmatch_t@@I@Z	; invert_matches
PUBLIC	?is_binary@@YAHPB_WI@Z				; is_binary
PUBLIC	?realpath@@YAPA_WPB_WPA_W@Z			; realpath
PUBLIC	?is_regex@@YAHPB_W@Z				; is_regex
PUBLIC	?ag_strdup@@YAPA_WPB_W@Z			; ag_strdup
PUBLIC	?generate_alpha_skip@@YAXPB_WIQAIH@Z		; generate_alpha_skip
PUBLIC	?ag_calloc@@YAPAXII@Z				; ag_calloc
PUBLIC	?compile_study@@YAXPAPAUreal_pcre16@@PAPAUpcre16_extra@@PA_WHH@Z ; compile_study
PUBLIC	?is_lowercase@@YAHPB_W@Z			; is_lowercase
PUBLIC	?generate_find_skip@@YAXPB_WIPAPAIH@Z		; generate_find_skip
PUBLIC	?is_wordchar@@YAH_W@Z				; is_wordchar
PUBLIC	?init_wordchar_table@@YAXXZ			; init_wordchar_table
PUBLIC	?die@@YAXPB_WZZ					; die
PUBLIC	?is_directory@@YAHPB_WPBUdirent@@@Z		; is_directory
PUBLIC	?ag_realloc@@YAPAXPAXI@Z			; ag_realloc
PUBLIC	?ag_malloc@@YAPAXI@Z				; ag_malloc
PUBLIC	?binary_search@@YAHPB_WPAPA_WHH@Z		; binary_search
PUBLIC	?ag_asprintf@@YAXPAPA_WPB_WZZ			; ag_asprintf
PUBLIC	?is_named_pipe@@YAHPB_WPBUdirent@@@Z		; is_named_pipe
PUBLIC	?getline@@YAHPAPA_WPAIPAU_iobuf@@@Z		; getline
PUBLIC	?is_fnmatch@@YAHPB_W@Z				; is_fnmatch
PUBLIC	?ag_strndup@@YAPA_WPB_WI@Z			; ag_strndup
PUBLIC	?free_strings@@YAXPAPA_WI@Z			; free_strings
PUBLIC	?is_symlink@@YAHPB_WPBUdirent@@@Z		; is_symlink
	ALIGN	4

_wordchar_table DD 0100H DUP (?)
_BSS	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?is_symlink@@YAHPB_WPBUdirent@@@Z
_TEXT	SEGMENT
?is_symlink@@YAHPB_WPBUdirent@@@Z PROC			; is_symlink, COMDAT
; _path$dead$ = ecx
; _d$dead$ = edx
; File i:\study\filescan\filescan\util.c
; Line 438
	xor	eax, eax
; Line 457
	ret	0
?is_symlink@@YAHPB_WPBUdirent@@@Z ENDP			; is_symlink
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?free_strings@@YAXPAPA_WI@Z
_TEXT	SEGMENT
_strs_len$1$ = -4					; size = 4
?free_strings@@YAXPAPA_WI@Z PROC			; free_strings, COMDAT
; _strs$ = ecx
; _strs_len$ = edx
; File i:\study\filescan\filescan\util.c
; Line 58
	push	ebp
	mov	ebp, esp
	push	ecx
	push	edi
	mov	edi, ecx
	mov	eax, edx
	mov	DWORD PTR _strs_len$1$[ebp], eax
; Line 59
	test	edi, edi
	je	SHORT $LN5@free_strin
; Line 63
	push	ebx
	mov	ebx, DWORD PTR __imp__free
	push	esi
	xor	esi, esi
	test	eax, eax
	je	SHORT $LN1@free_strin
	npad	2
$LL3@free_strin:
; Line 64
	push	DWORD PTR [edi+esi*4]
	call	ebx
	inc	esi
	add	esp, 4
	cmp	esi, DWORD PTR _strs_len$1$[ebp]
	jb	SHORT $LL3@free_strin
$LN1@free_strin:
; Line 66
	push	edi
	call	ebx
	add	esp, 4
	pop	esi
	pop	ebx
$LN5@free_strin:
	pop	edi
; Line 67
	mov	esp, ebp
	pop	ebp
	ret	0
?free_strings@@YAXPAPA_WI@Z ENDP			; free_strings
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?ag_strndup@@YAPA_WPB_WI@Z
_TEXT	SEGMENT
?ag_strndup@@YAPA_WPB_WI@Z PROC				; ag_strndup, COMDAT
; _s$ = ecx
; _size$ = edx
; File i:\study\filescan\filescan\util.c
; Line 46
	push	ebx
	push	esi
	push	edi
; Line 52
	lea	edi, DWORD PTR [edx+1]
	mov	ebx, ecx
; Line 27
	push	edi
	call	DWORD PTR __imp__malloc
	mov	esi, eax
	add	esp, 4
; Line 28
	test	esi, esi
	je	SHORT $LN8@ag_strndup
; Line 53
	push	ebx
	push	edi
	push	esi
	call	DWORD PTR __imp__wcscpy_s
	add	esp, 12					; 0000000cH
; Line 54
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx
; Line 56
	ret	0
$LN8@ag_strndup:
; Line 28
	push	OFFSET ??_C@_1DE@PGDGFCEA@?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?4?$AA?$AA@
	call	?die@@YAXPB_WZZ				; die
$LN10@ag_strndup:
$LN7@ag_strndup:
	int	3
?ag_strndup@@YAPA_WPB_WI@Z ENDP				; ag_strndup
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?is_fnmatch@@YAHPB_W@Z
_TEXT	SEGMENT
_fnmatch_chars$ = -16					; size = 12
__$ArrayPad$ = -4					; size = 4
?is_fnmatch@@YAHPB_W@Z PROC				; is_fnmatch, COMDAT
; _filename$ = ecx
; File i:\study\filescan\filescan\util.c
; Line 355
	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 365
	lea	eax, DWORD PTR _fnmatch_chars$[ebp]
	mov	DWORD PTR _fnmatch_chars$[ebp], 2752545	; 002a0021H
	push	eax
	push	ecx
	mov	DWORD PTR _fnmatch_chars$[ebp+4], 5963839 ; 005b003fH
	mov	DWORD PTR _fnmatch_chars$[ebp+8], 93	; 0000005dH
	call	DWORD PTR __imp__wcspbrk
; Line 366
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	add	esp, 8
	neg	eax
	sbb	eax, eax
	xor	ecx, ebp
	neg	eax
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?is_fnmatch@@YAHPB_W@Z ENDP				; is_fnmatch
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?getline@@YAHPAPA_WPAIPAU_iobuf@@@Z
_TEXT	SEGMENT
_srcln$1$ = -8						; size = 4
_len$ = -4						; size = 4
_stream$ = 8						; size = 4
?getline@@YAHPAPA_WPAIPAU_iobuf@@@Z PROC		; getline, COMDAT
; _lineptr$ = ecx
; _n$ = edx
; File i:\study\filescan\filescan\util.c
; Line 528
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	push	edi
	mov	edi, edx
; Line 529
	mov	DWORD PTR _len$[ebp], 0
	mov	esi, ecx
; Line 534
	lea	edx, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR _stream$[ebp]
	call	?fgetln@@YAPA_WPAU_iobuf@@PAI@Z		; fgetln
	mov	DWORD PTR _srcln$1$[ebp], eax
	test	eax, eax
	jne	SHORT $LN3@getline
; Line 535
	pop	edi
	or	eax, -1
	pop	esi
; Line 559
	mov	esp, ebp
	pop	ebp
	ret	0
$LN3@getline:
	push	ebx
; Line 538
	mov	ebx, DWORD PTR _len$[ebp]
	cmp	ebx, DWORD PTR [edi]
	jb	SHORT $LN2@getline
; Line 541
	lea	eax, DWORD PTR [ebx*4]
	push	eax
	push	DWORD PTR [esi]
	call	DWORD PTR __imp__realloc
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@getline
; Line 542
	pop	ebx
	pop	edi
	or	eax, -1
	pop	esi
; Line 559
	mov	esp, ebp
	pop	ebp
	ret	0
$LN1@getline:
; Line 544
	mov	DWORD PTR [esi], eax
; Line 545
	lea	eax, DWORD PTR [ebx+ebx]
	mov	DWORD PTR [edi], eax
	mov	eax, DWORD PTR _srcln$1$[ebp]
$LN2@getline:
; Line 548
	mov	esi, DWORD PTR [esi]
	lea	edi, DWORD PTR [ebx+ebx]
	push	edi
	push	eax
	push	esi
	call	_memcpy
; Line 554
	push	DWORD PTR _srcln$1$[ebp]
	call	DWORD PTR __imp__free
	add	esp, 16					; 00000010H
; Line 557
	xor	eax, eax
	mov	WORD PTR [edi+esi], ax
; Line 558
	mov	eax, ebx
	pop	ebx
	pop	edi
	pop	esi
; Line 559
	mov	esp, ebp
	pop	ebp
	ret	0
?getline@@YAHPAPA_WPAIPAU_iobuf@@@Z ENDP		; getline
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?is_named_pipe@@YAHPB_WPBUdirent@@@Z
_TEXT	SEGMENT
_full_path$ = -60					; size = 4
_s$ = -56						; size = 48
__$ArrayPad$ = -4					; size = 4
?is_named_pipe@@YAHPB_WPBUdirent@@@Z PROC		; is_named_pipe, COMDAT
; _path$ = ecx
; _d$ = edx
; File i:\study\filescan\filescan\util.c
; Line 459
	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
; Line 467
	push	DWORD PTR [edx]
	lea	eax, DWORD PTR _full_path$[ebp]
	push	ecx
	push	OFFSET ??_C@_1M@BHHLEAOO@?$AA?$CF?$AAs?$AA?1?$AA?$CF?$AAs?$AA?$AA@
	push	eax
	call	?ag_asprintf@@YAXPAPA_WPB_WZZ		; ag_asprintf
; Line 468
	mov	esi, DWORD PTR _full_path$[ebp]
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	push	esi
	call	DWORD PTR __imp___wstat64i32
	add	esp, 24					; 00000018H
; Line 469
	push	esi
	test	eax, eax
	je	SHORT $LN1@is_named_p
	call	DWORD PTR __imp__free
	add	esp, 4
; Line 470
	xor	eax, eax
; Line 474
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN1@is_named_p:
; Line 472
	call	DWORD PTR __imp__free
; Line 473
	mov	ecx, DWORD PTR _s$[ebp+6]
	add	esp, 4
	and	ecx, 61440				; 0000f000H
	xor	eax, eax
	cmp	ecx, 4096				; 00001000H
; Line 474
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	sete	al
	xor	ecx, ebp
	pop	esi
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?is_named_pipe@@YAHPB_WPBUdirent@@@Z ENDP		; is_named_pipe
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?ag_asprintf@@YAXPAPA_WPB_WZZ
_TEXT	SEGMENT
_ret$ = 8						; size = 4
_fmt$ = 12						; size = 4
?ag_asprintf@@YAXPAPA_WPB_WZZ PROC			; ag_asprintf, COMDAT
; File i:\study\filescan\filescan\util.c
; Line 476
	push	ebp
	mov	ebp, esp
; Line 479
	mov	edx, DWORD PTR _fmt$[ebp]
	lea	eax, DWORD PTR _fmt$[ebp+4]
	mov	ecx, DWORD PTR _ret$[ebp]
	push	eax
	call	?vasprintf@@YAHPAPA_WPB_WPAD@Z		; vasprintf
	add	esp, 4
	cmp	eax, -1
	je	SHORT $LN5@ag_asprint
; Line 483
	pop	ebp
	ret	0
$LN5@ag_asprint:
; Line 480
	push	OFFSET ??_C@_1CM@KKPBLOGP@?$AAv?$AAa?$AAs?$AAp?$AAr?$AAi?$AAn?$AAt?$AAf?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AA?9?$AA1?$AA?$AA@
	call	?die@@YAXPB_WZZ				; die
$LN7@ag_asprint:
$LN4@ag_asprint:
	int	3
?ag_asprintf@@YAXPAPA_WPB_WZZ ENDP			; ag_asprintf
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?binary_search@@YAHPB_WPAPA_WHH@Z
_TEXT	SEGMENT
_needle$1$ = -8						; size = 4
_haystack$1$ = -4					; size = 4
_start$ = 8						; size = 4
_end$ = 12						; size = 4
?binary_search@@YAHPB_WPAPA_WHH@Z PROC			; binary_search, COMDAT
; _needle$ = ecx
; _haystack$ = edx
; File i:\study\filescan\filescan\util.c
; Line 368
	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	ebx
; Line 372
	mov	ebx, DWORD PTR _start$[ebp]
	push	esi
	push	edi
	mov	edi, DWORD PTR _end$[ebp]
	mov	DWORD PTR _haystack$1$[ebp], edx
	mov	DWORD PTR _needle$1$[ebp], ecx
	cmp	ebx, edi
	je	SHORT $LN9@binary_sea
	npad	7
$LL7@binary_sea:
; Line 376
	lea	eax, DWORD PTR [ebx+edi]
	cdq
	sub	eax, edx
	mov	esi, eax
; Line 378
	mov	eax, DWORD PTR _haystack$1$[ebp]
	sar	esi, 1
	mov	eax, DWORD PTR [eax+esi*4]
$LL13@binary_sea:
	mov	dx, WORD PTR [ecx]
	cmp	dx, WORD PTR [eax]
	jne	SHORT $LN14@binary_sea
	test	dx, dx
	je	SHORT $LN15@binary_sea
	mov	dx, WORD PTR [ecx+2]
	cmp	dx, WORD PTR [eax+2]
	jne	SHORT $LN14@binary_sea
	add	ecx, 4
	add	eax, 4
	test	dx, dx
	jne	SHORT $LL13@binary_sea
$LN15@binary_sea:
	xor	eax, eax
	jmp	SHORT $LN16@binary_sea
$LN14@binary_sea:
	sbb	eax, eax
	or	eax, 1
$LN16@binary_sea:
; Line 379
	test	eax, eax
	jns	SHORT $LN17@binary_sea
; Line 380
	mov	edi, esi
	jmp	SHORT $LN10@binary_sea
$LN17@binary_sea:
; Line 381
	jle	SHORT $LN1@binary_sea
; Line 382
	lea	ebx, DWORD PTR [esi+1]
$LN10@binary_sea:
; Line 372
	mov	ecx, DWORD PTR _needle$1$[ebp]
	cmp	ebx, edi
	jne	SHORT $LL7@binary_sea
$LN9@binary_sea:
	pop	edi
	pop	esi
; Line 373
	or	eax, -1
	pop	ebx
; Line 386
	mov	esp, ebp
	pop	ebp
	ret	0
$LN1@binary_sea:
	pop	edi
; Line 385
	mov	eax, esi
	pop	esi
	pop	ebx
; Line 386
	mov	esp, ebp
	pop	ebp
	ret	0
?binary_search@@YAHPB_WPAPA_WHH@Z ENDP			; binary_search
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?ag_malloc@@YAPAXI@Z
_TEXT	SEGMENT
?ag_malloc@@YAPAXI@Z PROC				; ag_malloc, COMDAT
; _size$ = ecx
; File i:\study\filescan\filescan\util.c
; Line 27
	push	ecx
	call	DWORD PTR __imp__malloc
	add	esp, 4
; Line 28
	test	eax, eax
	je	SHORT $LN5@ag_malloc
; Line 29
	ret	0
$LN5@ag_malloc:
; Line 28
	push	OFFSET ??_C@_1DE@PGDGFCEA@?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?4?$AA?$AA@
	call	?die@@YAXPB_WZZ				; die
$LN7@ag_malloc:
$LN4@ag_malloc:
	int	3
?ag_malloc@@YAPAXI@Z ENDP				; ag_malloc
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?ag_realloc@@YAPAXPAXI@Z
_TEXT	SEGMENT
?ag_realloc@@YAPAXPAXI@Z PROC				; ag_realloc, COMDAT
; _ptr$ = ecx
; _size$ = edx
; File i:\study\filescan\filescan\util.c
; Line 32
	push	edx
	push	ecx
	call	DWORD PTR __imp__realloc
	add	esp, 8
; Line 33
	test	eax, eax
	je	SHORT $LN5@ag_realloc
; Line 34
	ret	0
$LN5@ag_realloc:
; Line 33
	push	OFFSET ??_C@_1DE@PGDGFCEA@?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?4?$AA?$AA@
	call	?die@@YAXPB_WZZ				; die
$LN7@ag_realloc:
$LN4@ag_realloc:
	int	3
?ag_realloc@@YAPAXPAXI@Z ENDP				; ag_realloc
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?is_directory@@YAHPB_WPBUdirent@@@Z
_TEXT	SEGMENT
_full_path$ = -60					; size = 4
_s$ = -56						; size = 48
__$ArrayPad$ = -4					; size = 4
?is_directory@@YAHPB_WPBUdirent@@@Z PROC		; is_directory, COMDAT
; _path$ = ecx
; _d$ = edx
; File i:\study\filescan\filescan\util.c
; Line 416
	push	ebp
	mov	ebp, esp
	sub	esp, 60					; 0000003cH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
; Line 427
	push	DWORD PTR [edx]
	lea	eax, DWORD PTR _full_path$[ebp]
	push	ecx
	push	OFFSET ??_C@_1M@BHHLEAOO@?$AA?$CF?$AAs?$AA?1?$AA?$CF?$AAs?$AA?$AA@
	push	eax
	call	?ag_asprintf@@YAXPAPA_WPB_WZZ		; ag_asprintf
; Line 428
	mov	esi, DWORD PTR _full_path$[ebp]
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	push	esi
	call	DWORD PTR __imp___wstat64i32
	add	esp, 24					; 00000018H
; Line 429
	push	esi
	test	eax, eax
	je	SHORT $LN1@is_directo
	call	DWORD PTR __imp__free
	add	esp, 4
; Line 430
	xor	eax, eax
; Line 434
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
$LN1@is_directo:
; Line 432
	call	DWORD PTR __imp__free
; Line 433
	mov	ecx, DWORD PTR _s$[ebp+6]
	add	esp, 4
	and	ecx, 61440				; 0000f000H
	xor	eax, eax
	cmp	ecx, 16384				; 00004000H
; Line 434
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	sete	al
	xor	ecx, ebp
	pop	esi
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?is_directory@@YAHPB_WPBUdirent@@@Z ENDP		; is_directory
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?die@@YAXPB_WZZ
_TEXT	SEGMENT
_fmt$ = 8						; size = 4
?die@@YAXPB_WZZ PROC					; die, COMDAT
; File i:\study\filescan\filescan\util.c
; Line 485
	push	ebp
	mov	ebp, esp
; File i:\study\filescan\filescan\log.c
; Line 42
	cmp	DWORD PTR _log_threshold, 40		; 00000028H
	push	ebx
; File i:\study\filescan\filescan\util.c
; Line 488
	mov	ebx, DWORD PTR _fmt$[ebp]
	push	edi
; File i:\study\filescan\filescan\log.c
; Line 42
	jg	SHORT $LN10@die
; Line 59
	call	DWORD PTR __imp____iob_func
; Line 60
	push	OFFSET ??_C@_1M@IDNLNAEL@?$AAE?$AAR?$AAR?$AA?3?$AA?5?$AA?$AA@
	lea	edi, DWORD PTR [eax+64]
	push	edi
	call	DWORD PTR __imp__fwprintf
; Line 64
	lea	eax, DWORD PTR _fmt$[ebp+4]
	push	eax
	push	ebx
	push	edi
	call	DWORD PTR __imp__vfwprintf
; Line 65
	push	OFFSET ??_C@_13LBAGMAIH@?$AA?6?$AA?$AA@
	push	edi
	call	DWORD PTR __imp__fwprintf
	add	esp, 28					; 0000001cH
$LN10@die:
; File i:\study\filescan\filescan\util.c
; Line 490
	push	2
	call	DWORD PTR __imp__exit
$LN13@die:
$LN12@die:
	int	3
?die@@YAXPB_WZZ ENDP					; die
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?init_wordchar_table@@YAXXZ
_TEXT	SEGMENT
?init_wordchar_table@@YAXXZ PROC			; init_wordchar_table, COMDAT
; File i:\study\filescan\filescan\util.c
; Line 392
	xor	ecx, ecx
	mov	edx, 97					; 00000061H
	push	esi
	push	edi
	lea	esi, DWORD PTR [ecx+65]
	lea	edi, DWORD PTR [ecx+48]
	npad	1
$LL3@init_wordc:
; Line 398
	movzx	eax, cx
	cmp	dx, ax
	ja	SHORT $LN6@init_wordc
	cmp	eax, 122				; 0000007aH
	jbe	SHORT $LN8@init_wordc
$LN6@init_wordc:
	cmp	si, ax
	ja	SHORT $LN7@init_wordc
	cmp	eax, 90					; 0000005aH
	jbe	SHORT $LN8@init_wordc
$LN7@init_wordc:
	cmp	di, ax
	ja	SHORT $LN9@init_wordc
	cmp	eax, 57					; 00000039H
	jbe	SHORT $LN8@init_wordc
$LN9@init_wordc:
	cmp	eax, 95					; 0000005fH
	je	SHORT $LN8@init_wordc
	xor	eax, eax
	jmp	SHORT $LN10@init_wordc
$LN8@init_wordc:
	mov	eax, 1
$LN10@init_wordc:
	mov	DWORD PTR _wordchar_table[ecx*4], eax
	inc	ecx
	cmp	ecx, 256				; 00000100H
	jl	SHORT $LL3@init_wordc
; Line 400
	pop	edi
	pop	esi
	ret	0
?init_wordchar_table@@YAXXZ ENDP			; init_wordchar_table
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?is_wordchar@@YAH_W@Z
_TEXT	SEGMENT
?is_wordchar@@YAH_W@Z PROC				; is_wordchar, COMDAT
; _ch$ = cx
; File i:\study\filescan\filescan\util.c
; Line 403
	movzx	eax, cx
	mov	eax, DWORD PTR _wordchar_table[eax*4]
; Line 404
	ret	0
?is_wordchar@@YAH_W@Z ENDP				; is_wordchar
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?generate_find_skip@@YAXPB_WIPAPAIH@Z
_TEXT	SEGMENT
_ptr$1$ = -12						; size = 4
_find$1$ = -8						; size = 4
tv309 = -4						; size = 4
_skip_lookup$dead$ = 8					; size = 4
_case_sensitive$ = 12					; size = 4
?generate_find_skip@@YAXPB_WIPAPAIH@Z PROC		; generate_find_skip, COMDAT
; _find$ = ecx
; _f_len$ = edx
; File i:\study\filescan\filescan\util.c
; Line 124
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	push	edi
	mov	edi, edx
	mov	DWORD PTR _find$1$[ebp], ecx
; Line 127
	lea	eax, DWORD PTR [edi*4]
; Line 27
	push	eax
	call	DWORD PTR __imp__malloc
	add	esp, 4
	mov	DWORD PTR _ptr$1$[ebp], eax
; Line 28
	test	eax, eax
	je	$LN24@generate_f
; Line 129
	mov	ecx, DWORD PTR _case_sensitive$[ebp]
	mov	ebx, edi
	mov	DWORD PTR ?find_skip_lookup@@3PAIA, eax	; find_skip_lookup
; Line 131
	mov	esi, edi
	test	edi, edi
	je	SHORT $LN6@generate_f
; Line 128
	lea	eax, DWORD PTR [eax+edi*4]
	add	eax, -4					; fffffffcH
	mov	DWORD PTR tv309[ebp], eax
$LL8@generate_f:
; Line 132
	push	ecx
	mov	ecx, DWORD PTR _find$1$[ebp]
	mov	edx, edi
	push	esi
	call	?is_prefix@@YAHPB_WIIH@Z		; is_prefix
; Line 135
	mov	ecx, DWORD PTR tv309[ebp]
	add	esp, 8
	test	eax, eax
	cmovne	ebx, esi
	mov	eax, ebx
	sub	eax, esi
	add	eax, edi
	mov	DWORD PTR [ecx], eax
	sub	ecx, 4
	mov	DWORD PTR tv309[ebp], ecx
	mov	ecx, DWORD PTR _case_sensitive$[ebp]
	dec	esi
	jne	SHORT $LL8@generate_f
$LN6@generate_f:
; Line 137
	xor	esi, esi
	test	edi, edi
	je	SHORT $LN2@generate_f
	mov	ebx, DWORD PTR _find$1$[ebp]
$LL4@generate_f:
; Line 138
	push	ecx
	push	esi
	mov	edx, edi
	mov	ecx, ebx
	call	?suffix_len@@YAIPB_WIIH@Z		; suffix_len
; Line 139
	mov	ecx, esi
	mov	edx, edi
	sub	ecx, eax
	sub	edx, eax
	add	esp, 8
	mov	cx, WORD PTR [ebx+ecx*2]
	cmp	cx, WORD PTR [ebx+edx*2-2]
	je	SHORT $LN3@generate_f
; Line 140
	mov	ecx, DWORD PTR _ptr$1$[ebp]
	sub	eax, esi
	dec	eax
	add	eax, edi
	mov	DWORD PTR [ecx+edx*4-4], eax
$LN3@generate_f:
; Line 137
	mov	ecx, DWORD PTR _case_sensitive$[ebp]
	inc	esi
	cmp	esi, edi
	jb	SHORT $LL4@generate_f
$LN2@generate_f:
	pop	edi
	pop	esi
	pop	ebx
; Line 143
	mov	esp, ebp
	pop	ebp
	ret	0
$LN24@generate_f:
; Line 28
	push	OFFSET ??_C@_1DE@PGDGFCEA@?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?4?$AA?$AA@
	call	?die@@YAXPB_WZZ				; die
$LN26@generate_f:
$LN23@generate_f:
	int	3
?generate_find_skip@@YAXPB_WIPAPAIH@Z ENDP		; generate_find_skip
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?is_lowercase@@YAHPB_W@Z
_TEXT	SEGMENT
?is_lowercase@@YAHPB_W@Z PROC				; is_lowercase, COMDAT
; _s$ = ecx
; File i:\study\filescan\filescan\util.c
; Line 406
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
; Line 408
	xor	esi, esi
	cmp	WORD PTR [edi], si
	je	SHORT $LN3@is_lowerca
	mov	ebx, DWORD PTR __imp__isupper
	mov	eax, edi
	mov	ecx, 128				; 00000080H
	npad	7
$LL5@is_lowerca:
; Line 409
	movzx	eax, WORD PTR [eax]
	cmp	ax, cx
	jae	SHORT $LN9@is_lowerca
	push	eax
	call	ebx
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN9@is_lowerca
; Line 408
	inc	esi
	mov	ecx, 128				; 00000080H
	cmp	WORD PTR [edi+esi*2], 0
	lea	eax, DWORD PTR [edi+esi*2]
	jne	SHORT $LL5@is_lowerca
$LN3@is_lowerca:
	pop	edi
	pop	esi
; Line 413
	mov	eax, 1
	pop	ebx
; Line 414
	ret	0
$LN9@is_lowerca:
	pop	edi
	pop	esi
; Line 410
	xor	eax, eax
	pop	ebx
; Line 414
	ret	0
?is_lowercase@@YAHPB_W@Z ENDP				; is_lowercase
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?compile_study@@YAXPAPAUreal_pcre16@@PAPAUpcre16_extra@@PA_WHH@Z
_TEXT	SEGMENT
_pcre_err_offset$ = -8					; size = 4
_pcre_err$ = -4						; size = 4
_q$ = 8							; size = 4
_pcre_opts$ = 12					; size = 4
_study_opts$dead$ = 16					; size = 4
?compile_study@@YAXPAPAUreal_pcre16@@PAPAUpcre16_extra@@PA_WHH@Z PROC ; compile_study, COMDAT
; _re$ = ecx
; _re_extra$ = edx
; File i:\study\filescan\filescan\util.c
; Line 263
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	esi
	push	edi
; File i:\study\filescan\pcre\pcre_compile.c
; Line 7755
	push	ecx
	lea	eax, DWORD PTR _pcre_err_offset$[ebp]
; File i:\study\filescan\filescan\util.c
; Line 264
	mov	DWORD PTR _pcre_err$[ebp], 0
; File i:\study\filescan\pcre\pcre_compile.c
; Line 7755
	push	eax
	lea	eax, DWORD PTR _pcre_err$[ebp]
; File i:\study\filescan\filescan\util.c
; Line 265
	mov	DWORD PTR _pcre_err_offset$[ebp], 0
; File i:\study\filescan\pcre\pcre_compile.c
; Line 7755
	push	eax
; File i:\study\filescan\filescan\util.c
; Line 263
	mov	edi, edx
	mov	esi, ecx
; File i:\study\filescan\pcre\pcre_compile.c
; Line 7755
	mov	edx, DWORD PTR _pcre_opts$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _q$[ebp]
	call	_pcre16_compile2
	add	esp, 16					; 00000010H
; File i:\study\filescan\filescan\util.c
; Line 267
	mov	DWORD PTR [esi], eax
; Line 268
	test	eax, eax
	je	SHORT $LN8@compile_st
; Line 273
	lea	ecx, DWORD PTR _pcre_err$[ebp]
	push	ecx
	mov	ecx, eax
	call	_pcre16_study
	add	esp, 4
	mov	DWORD PTR [edi], eax
; Line 274
	test	eax, eax
	jne	SHORT $LN1@compile_st
; Line 275
	push	DWORD PTR _pcre_err$[ebp]
	push	OFFSET ??_C@_1FM@HOKKFDCC@?$AAp?$AAc?$AAr?$AAe?$AA_?$AAs?$AAt?$AAu?$AAd?$AAy?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AAn?$AAo?$AAt?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAu?$AAs?$AAe?$AAf@
	call	?log_debug@@YAXPB_WZZ			; log_debug
	add	esp, 8
$LN1@compile_st:
; Line 277
	pop	edi
	pop	esi
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@compile_st:
; Line 271
	push	DWORD PTR _pcre_err$[ebp]
	push	DWORD PTR _pcre_err_offset$[ebp]
	push	OFFSET ??_C@_1OA@EHILIGIC@?$AAB?$AAa?$AAd?$AA?5?$AAr?$AAe?$AAg?$AAe?$AAx?$AA?$CB?$AA?5?$AAp?$AAc?$AAr?$AAe?$AA_?$AAc?$AAo?$AAm?$AAp?$AAi?$AAl?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd@
	call	?die@@YAXPB_WZZ				; die
$LN10@compile_st:
$LN7@compile_st:
	int	3
?compile_study@@YAXPAPAUreal_pcre16@@PAPAUpcre16_extra@@PA_WHH@Z ENDP ; compile_study
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?ag_calloc@@YAPAXII@Z
_TEXT	SEGMENT
?ag_calloc@@YAPAXII@Z PROC				; ag_calloc, COMDAT
; _count$ = ecx
; _size$ = edx
; File i:\study\filescan\filescan\util.c
; Line 37
	push	edx
	push	ecx
	call	DWORD PTR __imp__calloc
	add	esp, 8
; Line 38
	test	eax, eax
	je	SHORT $LN5@ag_calloc
; Line 39
	ret	0
$LN5@ag_calloc:
; Line 38
	push	OFFSET ??_C@_1DE@PGDGFCEA@?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?4?$AA?$AA@
	call	?die@@YAXPB_WZZ				; die
$LN7@ag_calloc:
$LN4@ag_calloc:
	int	3
?ag_calloc@@YAPAXII@Z ENDP				; ag_calloc
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?generate_alpha_skip@@YAXPB_WIQAIH@Z
_TEXT	SEGMENT
_skip_lookup$dead$ = 8					; size = 4
_case_sensitive$ = 12					; size = 4
?generate_alpha_skip@@YAXPB_WIQAIH@Z PROC		; generate_alpha_skip, COMDAT
; _find$ = ecx
; _f_len$ = edx
; File i:\study\filescan\filescan\util.c
; Line 69
	push	ebp
	mov	ebp, esp
	push	ebx
	push	esi
	mov	esi, edx
	mov	ebx, ecx
	push	edi
; Line 73
	mov	eax, esi
	mov	ecx, 256				; 00000100H
	mov	edi, OFFSET ?alpha_skip_lookup@@3PAIA	; alpha_skip_lookup
	rep stosd
; Line 78
	mov	eax, 0
	dec	esi
	je	SHORT $LN3@generate_a
	mov	edi, DWORD PTR _case_sensitive$[ebp]
$LL5@generate_a:
; Line 80
	movzx	ecx, WORD PTR [ebx+eax*2]
	mov	edx, esi
	sub	edx, eax
	test	edi, edi
	jne	SHORT $LN19@generate_a
; Line 82
	add	cx, 32					; 00000020H
	movzx	ecx, cx
	mov	DWORD PTR ?alpha_skip_lookup@@3PAIA[ecx*4], edx
; Line 83
	movzx	ecx, WORD PTR [ebx+eax*2]
	sub	cx, 32					; 00000020H
	movzx	ecx, cx
$LN19@generate_a:
	inc	eax
	mov	DWORD PTR ?alpha_skip_lookup@@3PAIA[ecx*4], edx
	cmp	eax, esi
	jb	SHORT $LL5@generate_a
$LN3@generate_a:
	pop	edi
	pop	esi
	pop	ebx
; Line 86
	pop	ebp
	ret	0
?generate_alpha_skip@@YAXPB_WIQAIH@Z ENDP		; generate_alpha_skip
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?ag_strdup@@YAPA_WPB_W@Z
_TEXT	SEGMENT
?ag_strdup@@YAPA_WPB_W@Z PROC				; ag_strdup, COMDAT
; _s$ = ecx
; File i:\study\filescan\filescan\util.c
; Line 42
	push	ecx
	call	DWORD PTR __imp___wcsdup
	add	esp, 4
; Line 43
	test	eax, eax
	je	SHORT $LN5@ag_strdup
; Line 44
	ret	0
$LN5@ag_strdup:
; Line 43
	push	OFFSET ??_C@_1DE@PGDGFCEA@?$AAM?$AAe?$AAm?$AAo?$AAr?$AAy?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?4?$AA?$AA@
	call	?die@@YAXPB_WZZ				; die
$LN7@ag_strdup:
$LN4@ag_strdup:
	int	3
?ag_strdup@@YAPA_WPB_W@Z ENDP				; ag_strdup
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?is_regex@@YAHPB_W@Z
_TEXT	SEGMENT
_regex_chars$ = -32					; size = 26
__$ArrayPad$ = -4					; size = 4
?is_regex@@YAHPB_W@Z PROC				; is_regex, COMDAT
; _query$ = ecx
; File i:\study\filescan\filescan\util.c
; Line 335
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 350
	xor	eax, eax
	mov	DWORD PTR _regex_chars$[ebp], 2621476	; 00280024H
	mov	WORD PTR _regex_chars$[ebp+24], ax
; Line 352
	lea	eax, DWORD PTR _regex_chars$[ebp]
	push	eax
	push	ecx
	mov	DWORD PTR _regex_chars$[ebp+4], 2752553	; 002a0029H
	mov	DWORD PTR _regex_chars$[ebp+8], 3014699	; 002e002bH
	mov	DWORD PTR _regex_chars$[ebp+12], 5963839 ; 005b003fH
	mov	DWORD PTR _regex_chars$[ebp+16], 6160476 ; 005e005cH
	mov	DWORD PTR _regex_chars$[ebp+20], 8126587 ; 007c007bH
	call	DWORD PTR __imp__wcspbrk
; Line 353
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	add	esp, 8
	neg	eax
	sbb	eax, eax
	xor	ecx, ebp
	neg	eax
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?is_regex@@YAHPB_W@Z ENDP				; is_regex
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?realpath@@YAPA_WPB_WPA_W@Z
_TEXT	SEGMENT
_tmp$ = -528						; size = 522
__$ArrayPad$ = -4					; size = 4
?realpath@@YAPA_WPB_WPA_W@Z PROC			; realpath, COMDAT
; _path$ = ecx
; _resolved_path$ = edx
; File i:\study\filescan\filescan\util.c
; Line 567
	push	ebp
	mov	ebp, esp
	sub	esp, 528				; 00000210H
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	esi
; Line 570
	push	ecx
	lea	eax, DWORD PTR _tmp$[ebp]
	mov	esi, edx
	push	522					; 0000020aH
	push	eax
	call	DWORD PTR __imp__wcscpy_s
	add	esp, 12					; 0000000cH
; Line 571
	lea	eax, DWORD PTR _tmp$[ebp]
; Line 572
	cmp	WORD PTR _tmp$[ebp], 0
	je	SHORT $LN2@realpath
	mov	ecx, 92					; 0000005cH
$LL3@realpath:
; Line 573
	cmp	WORD PTR [eax], 47			; 0000002fH
	jne	SHORT $LN1@realpath
; Line 574
	mov	WORD PTR [eax], cx
$LN1@realpath:
; Line 576
	add	eax, 2
	cmp	WORD PTR [eax], 0
	jne	SHORT $LL3@realpath
$LN2@realpath:
; Line 578
	push	260					; 00000104H
	lea	eax, DWORD PTR _tmp$[ebp]
	push	eax
	push	esi
	call	DWORD PTR __imp___wfullpath
; Line 579
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	add	esp, 12					; 0000000cH
	xor	ecx, ebp
	pop	esi
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
?realpath@@YAPA_WPB_WPA_W@Z ENDP			; realpath
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?is_binary@@YAHPB_WI@Z
_TEXT	SEGMENT
tv477 = -32						; size = 4
tv475 = -28						; size = 4
tv470 = -24						; size = 4
tv468 = -20						; size = 4
tv495 = -16						; size = 4
_suspicious_bytes$1$ = -12				; size = 4
tv484 = -8						; size = 4
_total_bytes$1$ = -4					; size = 4
?is_binary@@YAHPB_WI@Z PROC				; is_binary, COMDAT
; _buf$ = ecx
; _buf_len$ = edx
; File i:\study\filescan\filescan\util.c
; Line 281
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	ebx
	mov	ebx, ecx
; Line 283
	mov	eax, edx
	mov	ecx, 512				; 00000200H
	push	esi
	xor	esi, esi
	cmp	edx, ecx
	mov	DWORD PTR _suspicious_bytes$1$[ebp], esi
	cmova	eax, ecx
	mov	DWORD PTR _total_bytes$1$[ebp], eax
; Line 287
	test	edx, edx
	jne	SHORT $LN18@is_binary
$LN29@is_binary:
	pop	esi
; Line 288
	xor	eax, eax
	pop	ebx
; Line 333
	mov	esp, ebp
	pop	ebp
	ret	0
$LN18@is_binary:
; Line 291
	cmp	edx, 3
	jb	SHORT $LN17@is_binary
	mov	eax, 239				; 000000efH
	cmp	WORD PTR [ebx], ax
	jne	SHORT $LN17@is_binary
	mov	eax, 187				; 000000bbH
	cmp	WORD PTR [ebx+2], ax
	jne	SHORT $LN17@is_binary
	mov	eax, 191				; 000000bfH
	cmp	WORD PTR [ebx+4], ax
	je	SHORT $LN29@is_binary
$LN17@is_binary:
; Line 296
	cmp	edx, 4
	jb	SHORT $LN16@is_binary
	push	5
	push	OFFSET ??_C@_1M@JLCCEBLF@?$AA?$CF?$AAP?$AAD?$AAF?$AA?9?$AA?$AA@
	push	ebx
	call	DWORD PTR __imp__wcsncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN16@is_binary
; Line 298
	pop	esi
	mov	eax, 1
	pop	ebx
; Line 333
	mov	esp, ebp
	pop	ebp
	ret	0
$LN16@is_binary:
; Line 301
	mov	edx, DWORD PTR _total_bytes$1$[ebp]
	xor	ecx, ecx
	push	edi
	test	edx, edx
	je	$LN13@is_binary
	mov	DWORD PTR tv495[ebp], ecx
	lea	esi, DWORD PTR [ecx+2]
	lea	edi, DWORD PTR [ecx+1]
	mov	DWORD PTR tv468[ebp], 193		; 000000c1H
	mov	DWORD PTR tv470[ebp], 224		; 000000e0H
	mov	DWORD PTR tv484[ebp], 192		; 000000c0H
	mov	DWORD PTR tv475[ebp], 223		; 000000dfH
	mov	DWORD PTR tv477[ebp], 240		; 000000f0H
	npad	2
$LL15@is_binary:
; Line 302
	movzx	eax, WORD PTR [ebx+ecx*2]
	test	ax, ax
	je	$LN22@is_binary
; Line 305
	cmp	eax, 7
	jb	SHORT $LN9@is_binary
	cmp	eax, 14					; 0000000eH
	jbe	SHORT $LN14@is_binary
$LN9@is_binary:
	cmp	eax, 32					; 00000020H
	jb	SHORT $LN8@is_binary
	cmp	eax, 127				; 0000007fH
	jbe	SHORT $LN14@is_binary
$LN8@is_binary:
; Line 307
	cmp	ax, WORD PTR tv468[ebp]
	jbe	SHORT $LN7@is_binary
	cmp	ax, WORD PTR tv470[ebp]
	jae	SHORT $LN7@is_binary
	cmp	edi, edx
	jae	SHORT $LN7@is_binary
; Line 309
	movzx	eax, WORD PTR [ebx+ecx*2+2]
	inc	ecx
	inc	edi
	inc	esi
	cmp	eax, 127				; 0000007fH
	jbe	SHORT $LN3@is_binary
	cmp	ax, WORD PTR tv484[ebp]
	jb	SHORT $LN14@is_binary
$LN3@is_binary:
; Line 319
	mov	eax, DWORD PTR tv495[ebp]
	inc	DWORD PTR _suspicious_bytes$1$[ebp]
	add	eax, 100				; 00000064H
	mov	DWORD PTR tv495[ebp], eax
; Line 323
	cmp	ecx, 32					; 00000020H
	jb	SHORT $LN14@is_binary
	xor	edx, edx
	div	DWORD PTR _total_bytes$1$[ebp]
	cmp	eax, 10					; 0000000aH
	ja	SHORT $LN22@is_binary
	mov	edx, DWORD PTR _total_bytes$1$[ebp]
$LN14@is_binary:
; Line 301
	inc	ecx
	inc	edi
	inc	esi
	cmp	ecx, edx
	jb	SHORT $LL15@is_binary
; Line 323
	mov	esi, DWORD PTR _suspicious_bytes$1$[ebp]
$LN13@is_binary:
; Line 328
	imul	eax, esi, 100
	xor	edx, edx
	mov	ecx, 10					; 0000000aH
	pop	edi
	pop	esi
	pop	ebx
	div	DWORD PTR _total_bytes$1$[ebp]
	cmp	ecx, eax
	sbb	eax, eax
	neg	eax
; Line 333
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@is_binary:
; Line 312
	cmp	ax, WORD PTR tv475[ebp]
	jbe	SHORT $LN3@is_binary
	cmp	ax, WORD PTR tv477[ebp]
	jae	SHORT $LN3@is_binary
	cmp	esi, edx
	jae	SHORT $LN3@is_binary
; Line 314
	movzx	eax, WORD PTR [ebx+ecx*2+2]
	inc	ecx
	inc	edi
	inc	esi
	cmp	eax, 127				; 0000007fH
	jbe	SHORT $LN3@is_binary
	cmp	ax, WORD PTR tv484[ebp]
	jae	SHORT $LN3@is_binary
	movzx	eax, WORD PTR [ebx+ecx*2+2]
	cmp	eax, 127				; 0000007fH
	jbe	SHORT $LN3@is_binary
	cmp	ax, WORD PTR tv484[ebp]
	jae	SHORT $LN3@is_binary
; Line 315
	inc	ecx
	inc	edi
	inc	esi
; Line 316
	jmp	SHORT $LN14@is_binary
$LN22@is_binary:
	pop	edi
	pop	esi
; Line 304
	mov	eax, 1
	pop	ebx
; Line 333
	mov	esp, ebp
	pop	ebp
	ret	0
?is_binary@@YAHPB_WI@Z ENDP				; is_binary
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?invert_matches@@YAIPB_WIQAUmatch_t@@I@Z
_TEXT	SEGMENT
_next_match$ = -36					; size = 8
_buf$1$ = -32						; size = 4
tv365 = -28						; size = 4
_last_line_end$1$ = -24					; size = 4
_next_match$2$ = -20					; size = 4
_next_match$1$ = -16					; size = 4
_match_read_index$1$ = -12				; size = 4
_buf_len$1$ = -8					; size = 4
_in_inverted_match$1$ = -4				; size = 4
_matches$ = 8						; size = 4
_matches_len$ = 12					; size = 4
?invert_matches@@YAIPB_WIQAUmatch_t@@I@Z PROC		; invert_matches, COMDAT
; _buf$ = ecx
; _buf_len$ = edx
; File i:\study\filescan\filescan\util.c
; Line 198
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	push	ebx
	push	esi
	push	edi
; Line 207
	push	DWORD PTR _matches_len$[ebp]
	xor	ebx, ebx
	mov	DWORD PTR _buf_len$1$[ebp], edx
	push	OFFSET ??_C@_1CM@OPHHGMEC@?$AAI?$AAn?$AAv?$AAe?$AAr?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAu?$AA?5?$AAm?$AAa?$AAt?$AAc?$AAh?$AAe?$AAs?$AA?4?$AA?$AA@
	mov	DWORD PTR _buf$1$[ebp], ecx
	xor	esi, esi
	mov	DWORD PTR _match_read_index$1$[ebp], 0
	mov	DWORD PTR _last_line_end$1$[ebp], ebx
	mov	DWORD PTR _in_inverted_match$1$[ebp], 1
	call	?log_debug@@YAXPB_WZZ			; log_debug
; Line 209
	mov	edx, DWORD PTR _matches_len$[ebp]
	add	esp, 8
	mov	edi, DWORD PTR _matches$[ebp]
; Line 211
	mov	eax, DWORD PTR _buf_len$1$[ebp]
	test	edx, edx
	je	SHORT $LN17@invert_mat
; Line 210
	mov	ecx, DWORD PTR [edi]
	mov	DWORD PTR _next_match$1$[ebp], ecx
	mov	ecx, DWORD PTR [edi+4]
; Line 211
	jmp	SHORT $LN28@invert_mat
$LN17@invert_mat:
; Line 212
	lea	ecx, DWORD PTR [eax+1]
	mov	DWORD PTR _next_match$1$[ebp], ecx
	mov	ecx, DWORD PTR _next_match$[ebp+4]
$LN28@invert_mat:
	mov	DWORD PTR _next_match$2$[ebp], ecx
; Line 216
	test	edx, edx
	jne	SHORT $LN15@invert_mat
; Line 218
	dec	eax
	mov	DWORD PTR [edi], ebx
	mov	DWORD PTR [edi+4], eax
; Line 219
	lea	eax, DWORD PTR [edx+1]
; Line 261
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN15@invert_mat:
; Line 222
	xor	ecx, ecx
	test	eax, eax
	je	$LN12@invert_mat
	mov	eax, edi
	mov	DWORD PTR tv365[ebp], eax
	npad	6
$LL14@invert_mat:
; Line 223
	mov	edi, DWORD PTR _matches$[ebp]
	cmp	ecx, DWORD PTR _next_match$1$[ebp]
	jne	SHORT $LN11@invert_mat
; Line 224
	mov	ecx, DWORD PTR _next_match$2$[ebp]
; Line 226
	add	eax, 8
	inc	DWORD PTR _match_read_index$1$[ebp]
	dec	ecx
	mov	DWORD PTR tv365[ebp], eax
; Line 228
	cmp	DWORD PTR _match_read_index$1$[ebp], edx
	jae	SHORT $LN10@invert_mat
; Line 229
	mov	edi, DWORD PTR [eax]
	mov	eax, DWORD PTR [eax+4]
	mov	DWORD PTR _next_match$1$[ebp], edi
	mov	edi, DWORD PTR _matches$[ebp]
	mov	DWORD PTR _next_match$2$[ebp], eax
$LN10@invert_mat:
; Line 232
	cmp	DWORD PTR _in_inverted_match$1$[ebp], 0
	je	SHORT $LN9@invert_mat
	mov	eax, DWORD PTR _last_line_end$1$[ebp]
	cmp	eax, esi
	jbe	SHORT $LN9@invert_mat
; Line 234
	dec	eax
	mov	DWORD PTR [edi+ebx*8], esi
	mov	DWORD PTR [edi+ebx*8+4], eax
; Line 236
	inc	ebx
$LN9@invert_mat:
; Line 239
	xor	eax, eax
	mov	DWORD PTR _in_inverted_match$1$[ebp], eax
	jmp	SHORT $LN13@invert_mat
$LN11@invert_mat:
; Line 240
	mov	eax, DWORD PTR _buf_len$1$[ebp]
	dec	eax
	cmp	ecx, eax
	jne	SHORT $LN7@invert_mat
	mov	eax, DWORD PTR _in_inverted_match$1$[ebp]
	test	eax, eax
	je	SHORT $LN7@invert_mat
; Line 241
	mov	DWORD PTR [edi+ebx*8], esi
; Line 242
	mov	DWORD PTR [edi+ebx*8+4], ecx
; Line 244
	inc	ebx
	jmp	SHORT $LN13@invert_mat
$LN7@invert_mat:
; Line 245
	mov	eax, DWORD PTR _buf$1$[ebp]
	cmp	WORD PTR [eax+ecx*2], 10		; 0000000aH
	mov	eax, DWORD PTR _in_inverted_match$1$[ebp]
	jne	SHORT $LN13@invert_mat
; Line 246
	lea	edi, DWORD PTR [ecx+1]
; Line 252
	mov	DWORD PTR _in_inverted_match$1$[ebp], 1
	test	eax, eax
	mov	DWORD PTR _last_line_end$1$[ebp], edi
	cmove	esi, edi
	mov	edi, DWORD PTR _matches$[ebp]
$LN13@invert_mat:
; Line 222
	mov	eax, DWORD PTR tv365[ebp]
	inc	ecx
	cmp	ecx, DWORD PTR _buf_len$1$[ebp]
	jb	$LL14@invert_mat
$LN12@invert_mat:
; Line 256
	xor	esi, esi
	test	edx, edx
	je	SHORT $LN1@invert_mat
$LL3@invert_mat:
; Line 257
	push	DWORD PTR [edi+esi*8+4]
	push	DWORD PTR [edi+esi*8]
	push	esi
	push	OFFSET ??_C@_1EG@LDCGIKAD@?$AAI?$AAn?$AAv?$AAe?$AAr?$AAt?$AAe?$AAd?$AA?5?$AAm?$AAa?$AAt?$AAc?$AAh?$AA?5?$AA?$CF?$AAi?$AA?5?$AAs?$AAt?$AAa?$AAr?$AAt?$AA?5?$AA?$CF?$AAi?$AA?5?$AAe?$AAn?$AAd?$AA?5?$AA?$CF@
	call	?log_debug@@YAXPB_WZZ			; log_debug
	inc	esi
	add	esp, 16					; 00000010H
	cmp	esi, DWORD PTR _matches_len$[ebp]
	jb	SHORT $LL3@invert_mat
$LN1@invert_mat:
; Line 261
	pop	edi
	pop	esi
	mov	eax, ebx
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?invert_matches@@YAIPB_WIQAUmatch_t@@I@Z ENDP		; invert_matches
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?get_strstr@@YAP6APB_WPB_W0IIQBIPBI@ZW4case_behavior@@@Z
_TEXT	SEGMENT
?get_strstr@@YAP6APB_WPB_W0IIQBIPBI@ZW4case_behavior@@@Z PROC ; get_strstr, COMDAT
; _casing$ = ecx
; File i:\study\filescan\filescan\util.c
; Line 191
	cmp	ecx, 2
	mov	eax, OFFSET ?boyer_moore_strnstr@@YAPB_WPB_W0IIQBIPBI@Z ; boyer_moore_strnstr
	mov	edx, OFFSET ?boyer_moore_strncasestr@@YAPB_WPB_W0IIQBIPBI@Z ; boyer_moore_strncasestr
	cmove	eax, edx
; Line 196
	ret	0
?get_strstr@@YAP6APB_WPB_W0IIQBIPBI@ZW4case_behavior@@@Z ENDP ; get_strstr
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?is_prefix@@YAHPB_WIIH@Z
_TEXT	SEGMENT
_s_len$1$ = -4						; size = 4
_pos$ = 8						; size = 4
_case_sensitive$ = 12					; size = 4
?is_prefix@@YAHPB_WIIH@Z PROC				; is_prefix, COMDAT
; _s$ = ecx
; _s_len$ = edx
; File i:\study\filescan\filescan\util.c
; Line 88
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 91
	mov	eax, DWORD PTR _pos$[ebp]
	mov	DWORD PTR _s_len$1$[ebp], edx
	push	ebx
	push	esi
	push	edi
	mov	edi, ecx
	cmp	eax, edx
	jae	SHORT $LN5@is_prefix
	lea	ebx, DWORD PTR [edi+eax*2]
$LL7@is_prefix:
; Line 92
	cmp	DWORD PTR _case_sensitive$[ebp], 0
	je	SHORT $LN4@is_prefix
; Line 93
	mov	ax, WORD PTR [edi]
	cmp	ax, WORD PTR [ebx]
	je	SHORT $LN6@is_prefix
$LN11@is_prefix:
	pop	edi
	pop	esi
; Line 94
	xor	eax, eax
	pop	ebx
; Line 104
	mov	esp, ebp
	pop	ebp
	ret	0
$LN4@is_prefix:
; Line 97
	movzx	eax, WORD PTR [ebx]
	push	eax
	call	DWORD PTR __imp__tolower
	movzx	ecx, WORD PTR [edi]
	mov	esi, eax
	push	ecx
	call	DWORD PTR __imp__tolower
	add	esp, 8
	cmp	eax, esi
	jne	SHORT $LN11@is_prefix
	mov	edx, DWORD PTR _s_len$1$[ebp]
$LN6@is_prefix:
; Line 91
	mov	eax, DWORD PTR _pos$[ebp]
	add	ebx, 2
	inc	eax
	add	edi, 2
	mov	DWORD PTR _pos$[ebp], eax
	cmp	eax, edx
	jb	SHORT $LL7@is_prefix
$LN5@is_prefix:
	pop	edi
	pop	esi
; Line 103
	mov	eax, 1
	pop	ebx
; Line 104
	mov	esp, ebp
	pop	ebp
	ret	0
?is_prefix@@YAHPB_WIIH@Z ENDP				; is_prefix
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?suffix_len@@YAIPB_WIIH@Z
_TEXT	SEGMENT
tv360 = -4						; size = 4
_pos$ = 8						; size = 4
_case_sensitive$ = 12					; size = 4
?suffix_len@@YAIPB_WIIH@Z PROC				; suffix_len, COMDAT
; _s$ = ecx
; _s_len$ = edx
; File i:\study\filescan\filescan\util.c
; Line 106
	push	ebp
	mov	ebp, esp
	push	ecx
; Line 109
	mov	eax, DWORD PTR _pos$[ebp]
	push	edi
	xor	edi, edi
	test	eax, eax
	je	SHORT $LN17@suffix_len
	push	ebx
	lea	ebx, DWORD PTR [ecx+eax*2]
	lea	ecx, DWORD PTR [ecx+edx*2]
	add	ecx, -2					; fffffffeH
	mov	DWORD PTR tv360[ebp], ecx
	push	esi
	npad	4
$LL7@suffix_len:
; Line 110
	cmp	DWORD PTR _case_sensitive$[ebp], 0
	je	SHORT $LN4@suffix_len
; Line 111
	mov	ax, WORD PTR [ebx]
	cmp	ax, WORD PTR [ecx]
	jne	SHORT $LN19@suffix_len
; Line 114
	jmp	SHORT $LN6@suffix_len
$LN4@suffix_len:
; Line 115
	movzx	eax, WORD PTR [ecx]
	push	eax
	call	DWORD PTR __imp__tolower
	mov	esi, eax
	movzx	eax, WORD PTR [ebx]
	push	eax
	call	DWORD PTR __imp__tolower
	add	esp, 8
	cmp	eax, esi
	jne	SHORT $LN19@suffix_len
	mov	ecx, DWORD PTR tv360[ebp]
$LN6@suffix_len:
; Line 109
	inc	edi
	sub	ecx, 2
	sub	ebx, 2
	mov	DWORD PTR tv360[ebp], ecx
	cmp	edi, DWORD PTR _pos$[ebp]
	jb	SHORT $LL7@suffix_len
$LN19@suffix_len:
	pop	esi
	pop	ebx
; Line 121
	mov	eax, edi
	pop	edi
; Line 122
	mov	esp, ebp
	pop	ebp
	ret	0
$LN17@suffix_len:
; Line 121
	mov	eax, edi
	pop	edi
; Line 122
	mov	esp, ebp
	pop	ebp
	ret	0
?suffix_len@@YAIPB_WIIH@Z ENDP				; suffix_len
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?ag_max@@YAIII@Z
_TEXT	SEGMENT
?ag_max@@YAIII@Z PROC					; ag_max, COMDAT
; _a$ = ecx
; _b$ = edx
; File i:\study\filescan\filescan\util.c
; Line 146
	cmp	edx, ecx
	cmova	ecx, edx
	mov	eax, ecx
; Line 150
	ret	0
?ag_max@@YAIII@Z ENDP					; ag_max
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?boyer_moore_strnstr@@YAPB_WPB_W0IIQBIPBI@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_find$ = 12						; size = 4
_s_len$ = 16						; size = 4
_f_len$ = 20						; size = 4
_alpha_skip_lookup$ = 24				; size = 4
_find_skip_lookup$ = 28					; size = 4
?boyer_moore_strnstr@@YAPB_WPB_W0IIQBIPBI@Z PROC	; boyer_moore_strnstr, COMDAT
; File i:\study\filescan\filescan\util.c
; Line 154
	push	ebp
	mov	ebp, esp
; Line 156
	mov	ecx, DWORD PTR _f_len$[ebp]
	push	ebx
	push	esi
	push	edi
	lea	eax, DWORD PTR [ecx-1]
; Line 158
	cmp	eax, DWORD PTR _s_len$[ebp]
	jae	SHORT $LN5@boyer_moor
	mov	edi, DWORD PTR _find$[ebp]
	lea	ebx, DWORD PTR [ecx-1]
	mov	esi, DWORD PTR _s$[ebp]
	npad	6
$LL6@boyer_moor:
; Line 159
	mov	edx, ebx
	test	edx, edx
	js	SHORT $LN14@boyer_moor
$LL4@boyer_moor:
	mov	cx, WORD PTR [esi+eax*2]
	cmp	cx, WORD PTR [edi+edx*2]
	jne	SHORT $LN2@boyer_moor
	dec	eax
	dec	edx
	jns	SHORT $LL4@boyer_moor
$LN14@boyer_moor:
; Line 162
	lea	eax, DWORD PTR [eax+1]
	pop	edi
	lea	eax, DWORD PTR [esi+eax*2]
	pop	esi
	pop	ebx
; Line 168
	pop	ebp
	ret	0
$LN2@boyer_moor:
; Line 164
	mov	ecx, DWORD PTR _find_skip_lookup$[ebp]
	mov	edi, DWORD PTR _alpha_skip_lookup$[ebp]
	mov	edx, DWORD PTR [ecx+edx*4]
	movzx	ecx, WORD PTR [esi+eax*2]
	mov	ecx, DWORD PTR [edi+ecx*4]
; Line 146
	cmp	edx, ecx
; Line 158
	mov	edi, DWORD PTR _find$[ebp]
; Line 146
	cmova	ecx, edx
; Line 164
	add	eax, ecx
	cmp	eax, DWORD PTR _s_len$[ebp]
	jb	SHORT $LL6@boyer_moor
$LN5@boyer_moor:
	pop	edi
	pop	esi
; Line 167
	xor	eax, eax
	pop	ebx
; Line 168
	pop	ebp
	ret	0
?boyer_moore_strnstr@@YAPB_WPB_W0IIQBIPBI@Z ENDP	; boyer_moore_strnstr
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?boyer_moore_strncasestr@@YAPB_WPB_W0IIQBIPBI@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_find$ = 12						; size = 4
_s_len$ = 16						; size = 4
tv224 = 20						; size = 4
_f_len$ = 20						; size = 4
_alpha_skip_lookup$ = 24				; size = 4
_find_skip_lookup$ = 28					; size = 4
?boyer_moore_strncasestr@@YAPB_WPB_W0IIQBIPBI@Z PROC	; boyer_moore_strncasestr, COMDAT
; File i:\study\filescan\filescan\util.c
; Line 172
	push	ebp
	mov	ebp, esp
; Line 174
	mov	eax, DWORD PTR _f_len$[ebp]
	push	ebx
	push	esi
	push	edi
	lea	esi, DWORD PTR [eax-1]
; Line 176
	cmp	esi, DWORD PTR _s_len$[ebp]
	jae	SHORT $LN5@boyer_moor
	mov	ebx, DWORD PTR _s$[ebp]
	dec	eax
	mov	DWORD PTR tv224[ebp], eax
$LL6@boyer_moor:
; Line 177
	mov	edi, eax
	test	edi, edi
	js	SHORT $LN14@boyer_moor
	npad	2
$LL4@boyer_moor:
	movzx	eax, WORD PTR [ebx+esi*2]
	push	eax
	call	DWORD PTR __imp__tolower
	mov	ecx, DWORD PTR _find$[ebp]
	add	esp, 4
	movzx	ecx, WORD PTR [ecx+edi*2]
	cmp	eax, ecx
	jne	SHORT $LN2@boyer_moor
	dec	esi
	dec	edi
	jns	SHORT $LL4@boyer_moor
$LN14@boyer_moor:
; Line 180
	lea	eax, DWORD PTR [ebx+2]
	pop	edi
	lea	eax, DWORD PTR [eax+esi*2]
	pop	esi
	pop	ebx
; Line 186
	pop	ebp
	ret	0
$LN2@boyer_moor:
; Line 182
	mov	eax, DWORD PTR _find_skip_lookup$[ebp]
	mov	edx, DWORD PTR _alpha_skip_lookup$[ebp]
	mov	ecx, DWORD PTR [eax+edi*4]
	movzx	eax, BYTE PTR [ebx+esi*2]
	mov	eax, DWORD PTR [edx+eax*4]
; Line 146
	cmp	ecx, eax
	cmova	eax, ecx
; Line 182
	add	esi, eax
	cmp	esi, DWORD PTR _s_len$[ebp]
	jae	SHORT $LN5@boyer_moor
; Line 176
	mov	eax, DWORD PTR tv224[ebp]
	jmp	SHORT $LL6@boyer_moor
$LN5@boyer_moor:
	pop	edi
	pop	esi
; Line 185
	xor	eax, eax
	pop	ebx
; Line 186
	pop	ebp
	ret	0
?boyer_moore_strncasestr@@YAPB_WPB_W0IIQBIPBI@Z ENDP	; boyer_moore_strncasestr
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?fgetln@@YAPA_WPAU_iobuf@@PAI@Z
_TEXT	SEGMENT
_lenp$1$ = -12						; size = 4
_fp$1$ = -8						; size = 4
_used$1$ = -4						; size = 4
?fgetln@@YAPA_WPAU_iobuf@@PAI@Z PROC			; fgetln, COMDAT
; _fp$ = ecx
; _lenp$ = edx
; File i:\study\filescan\filescan\util.c
; Line 494
	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	push	ebx
	push	esi
	mov	eax, ecx
	mov	DWORD PTR _lenp$1$[ebp], edx
	push	edi
; Line 495
	xor	esi, esi
	mov	DWORD PTR _fp$1$[ebp], eax
; Line 499
	push	eax
	mov	DWORD PTR _used$1$[ebp], esi
	xor	edi, edi
	call	DWORD PTR __imp__fgetwc
	movzx	ebx, ax
	add	esp, 4
	cmp	ebx, -1
	je	SHORT $LN12@fgetln
	npad	6
$LL7@fgetln:
; Line 500
	mov	eax, DWORD PTR _used$1$[ebp]
	test	esi, esi
	je	SHORT $LN4@fgetln
	cmp	edi, eax
	jl	SHORT $LN5@fgetln
$LN4@fgetln:
; Line 503
	add	eax, 512				; 00000200H
	mov	DWORD PTR _used$1$[ebp], eax
; Line 504
	add	eax, eax
	push	eax
	push	esi
	call	DWORD PTR __imp__realloc
	add	esp, 8
	test	eax, eax
	je	SHORT $LN11@fgetln
; Line 510
	mov	esi, eax
$LN5@fgetln:
; Line 513
	mov	WORD PTR [esi+edi*2], bx
	inc	edi
; Line 514
	cmp	ebx, 10					; 0000000aH
	je	SHORT $LN12@fgetln
; Line 499
	push	DWORD PTR _fp$1$[ebp]
	call	DWORD PTR __imp__fgetwc
	movzx	ebx, ax
	add	esp, 4
	cmp	ebx, -1
	jne	SHORT $LL7@fgetln
$LN12@fgetln:
; Line 519
	mov	eax, DWORD PTR _lenp$1$[ebp]
	mov	DWORD PTR [eax], edi
; Line 520
	mov	eax, esi
	pop	edi
	pop	esi
	pop	ebx
; Line 521
	mov	esp, ebp
	pop	ebp
	ret	0
$LN11@fgetln:
; Line 506
	test	esi, esi
	je	SHORT $LN2@fgetln
; Line 507
	push	esi
	call	DWORD PTR __imp__free
	add	esp, 4
$LN2@fgetln:
; Line 508
	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx
; Line 521
	mov	esp, ebp
	pop	ebp
	ret	0
?fgetln@@YAPA_WPAU_iobuf@@PAI@Z ENDP			; fgetln
_TEXT	ENDS
; Function compile flags: /Ogtp
;	COMDAT ?vasprintf@@YAHPAPA_WPB_WPAD@Z
_TEXT	SEGMENT
_args2$ = -4						; size = 4
_args$ = 8						; size = 4
?vasprintf@@YAHPAPA_WPB_WPAD@Z PROC			; vasprintf, COMDAT
; _ret$ = ecx
; _fmt$ = edx
; File i:\study\filescan\filescan\util.c
; Line 612
	push	ebp
	mov	ebp, esp
	push	ecx
	push	ebx
	push	esi
; Line 622
	mov	esi, DWORD PTR _args$[ebp]
	lea	eax, DWORD PTR _args2$[ebp]
	push	edi
	mov	edi, ecx
	mov	ebx, edx
	push	esi
	push	eax
	mov	DWORD PTR [edi], 0
	call	DWORD PTR __imp___vacopy
; Line 627
	push	esi
	push	ebx
	push	0
	push	0
	call	DWORD PTR __imp___vsnwprintf
	mov	esi, eax
	add	esp, 24					; 00000018H
; Line 629
	test	esi, esi
	js	SHORT $LN4@vasprintf
; Line 632
	inc	esi
	lea	eax, DWORD PTR [esi+esi]
	push	eax
	call	DWORD PTR __imp__malloc
	add	esp, 4
	mov	DWORD PTR [edi], eax
; Line 633
	test	eax, eax
	jne	SHORT $LN2@vasprintf
; Line 634
	pop	edi
	pop	esi
	or	eax, -1
	pop	ebx
; Line 642
	mov	esp, ebp
	pop	ebp
	ret	0
$LN2@vasprintf:
; Line 636
	push	DWORD PTR _args2$[ebp]
	push	ebx
	push	esi
	push	eax
	call	DWORD PTR __imp___vsnwprintf
	mov	esi, eax
; Line 637
	mov	DWORD PTR _args2$[ebp], 0
	add	esp, 16					; 00000010H
; Line 638
	test	esi, esi
	jns	SHORT $LN1@vasprintf
; Line 639
	push	DWORD PTR [edi]
	call	DWORD PTR __imp__free
	add	esp, 4
$LN1@vasprintf:
; Line 641
	mov	eax, esi
$LN4@vasprintf:
	pop	edi
	pop	esi
	pop	ebx
; Line 642
	mov	esp, ebp
	pop	ebp
	ret	0
?vasprintf@@YAHPAPA_WPB_WPAD@Z ENDP			; vasprintf
_TEXT	ENDS
END
